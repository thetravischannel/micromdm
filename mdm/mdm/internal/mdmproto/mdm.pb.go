// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.2
// source: mdm.proto

package mdmproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResultPayload_Status int32

const (
	ResultPayload_Acknowledged       ResultPayload_Status = 0
	ResultPayload_Error              ResultPayload_Status = 1
	ResultPayload_CommandFormatError ResultPayload_Status = 2
	ResultPayload_Idle               ResultPayload_Status = 3
	ResultPayload_NotNow             ResultPayload_Status = 4
)

// Enum value maps for ResultPayload_Status.
var (
	ResultPayload_Status_name = map[int32]string{
		0: "Acknowledged",
		1: "Error",
		2: "CommandFormatError",
		3: "Idle",
		4: "NotNow",
	}
	ResultPayload_Status_value = map[string]int32{
		"Acknowledged":       0,
		"Error":              1,
		"CommandFormatError": 2,
		"Idle":               3,
		"NotNow":             4,
	}
)

func (x ResultPayload_Status) Enum() *ResultPayload_Status {
	p := new(ResultPayload_Status)
	*p = x
	return p
}

func (x ResultPayload_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultPayload_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mdm_proto_enumTypes[0].Descriptor()
}

func (ResultPayload_Status) Type() protoreflect.EnumType {
	return &file_mdm_proto_enumTypes[0]
}

func (x ResultPayload_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultPayload_Status.Descriptor instead.
func (ResultPayload_Status) EnumDescriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{72, 0}
}

type CommandPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandUuid string   `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid,proto3" json:"command_uuid,omitempty"`
	Command     *Command `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CommandPayload) Reset() {
	*x = CommandPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandPayload) ProtoMessage() {}

func (x *CommandPayload) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandPayload.ProtoReflect.Descriptor instead.
func (*CommandPayload) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{0}
}

func (x *CommandPayload) GetCommandUuid() string {
	if x != nil {
		return x.CommandUuid
	}
	return ""
}

func (x *CommandPayload) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestType string `protobuf:"bytes,1,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	// Request Types that do not have additional fields:
	// - ProfileList
	// - ProvisioningProfileList
	// - CertificateList",
	// - SecurityInfo
	// - RestartDevice
	// - LOMSetupRequest
	// - ShutDownDevice
	// - StopMirroring
	// - ClearRestrictionsPassword
	// - UserList
	// - LogOutUser
	// - PlayLostModeSound
	// - DisableLostMode
	// - DeviceLocation
	// - ManagedMediaList
	// - DeviceConfigured
	// - AvailableOSUpdates
	// - NSExtensionMappings
	// - EnableRemoteDesktop
	// - DisableRemoteDesktop
	// - ActivationLockBypassCode
	//
	// Types that are assignable to Request:
	//
	//	*Command_InstallProfile
	//	*Command_RemoveProfile
	//	*Command_InstallProvisioningProfile
	//	*Command_RemoveProfisioningProfile
	//	*Command_InstalledApplicationList
	//	*Command_DeviceInformation
	//	*Command_DeviceLock
	//	*Command_ClearPasscode
	//	*Command_EraseDevice
	//	*Command_RequestMirroring
	//	*Command_Restrictions
	//	*Command_UnlockUserAccount
	//	*Command_DeleteUser
	//	*Command_EnableLostMode
	//	*Command_InstallApplication
	//	*Command_AccountConfiguration
	//	*Command_ApplyRedemptionCode
	//	*Command_ManagedApplicationList
	//	*Command_RemoveApplication
	//	*Command_InviteToProgram
	//	*Command_ValidataApplications
	//	*Command_InstallMedia
	//	*Command_RemoveMedia
	//	*Command_Settings
	//	*Command_ManagedApplicationConfiguration
	//	*Command_ManagedApplicationAttributes
	//	*Command_ManagedApplicationFeedback
	//	*Command_SetFirmwarePassword
	//	*Command_VerifyFirmwarePassword
	//	*Command_SetAutoAdminPassword
	//	*Command_ScheduleOsUpdate
	//	*Command_ScheduleOsUpdateScan
	//	*Command_ActiveNsExtensions
	//	*Command_RotateFilevaultKey
	//	*Command_InstallEnterpriseApplication
	//	*Command_SetBootstrapToken
	//	*Command_SetRecoveryLock
	//	*Command_VerifyRecoveryLock
	//	*Command_RefreshCellularPlans
	//	*Command_LomDeviceRequestCommand
	Request isCommand_Request `protobuf_oneof:"request"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{1}
}

func (x *Command) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (m *Command) GetRequest() isCommand_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Command) GetInstallProfile() *InstallProfile {
	if x, ok := x.GetRequest().(*Command_InstallProfile); ok {
		return x.InstallProfile
	}
	return nil
}

func (x *Command) GetRemoveProfile() *RemoveProfile {
	if x, ok := x.GetRequest().(*Command_RemoveProfile); ok {
		return x.RemoveProfile
	}
	return nil
}

func (x *Command) GetInstallProvisioningProfile() *InstallProvisioningProfile {
	if x, ok := x.GetRequest().(*Command_InstallProvisioningProfile); ok {
		return x.InstallProvisioningProfile
	}
	return nil
}

func (x *Command) GetRemoveProfisioningProfile() *RemoveProvisioningProfile {
	if x, ok := x.GetRequest().(*Command_RemoveProfisioningProfile); ok {
		return x.RemoveProfisioningProfile
	}
	return nil
}

func (x *Command) GetInstalledApplicationList() *InstalledApplicationList {
	if x, ok := x.GetRequest().(*Command_InstalledApplicationList); ok {
		return x.InstalledApplicationList
	}
	return nil
}

func (x *Command) GetDeviceInformation() *DeviceInformation {
	if x, ok := x.GetRequest().(*Command_DeviceInformation); ok {
		return x.DeviceInformation
	}
	return nil
}

func (x *Command) GetDeviceLock() *DeviceLock {
	if x, ok := x.GetRequest().(*Command_DeviceLock); ok {
		return x.DeviceLock
	}
	return nil
}

func (x *Command) GetClearPasscode() *ClearPasscode {
	if x, ok := x.GetRequest().(*Command_ClearPasscode); ok {
		return x.ClearPasscode
	}
	return nil
}

func (x *Command) GetEraseDevice() *EraseDevice {
	if x, ok := x.GetRequest().(*Command_EraseDevice); ok {
		return x.EraseDevice
	}
	return nil
}

func (x *Command) GetRequestMirroring() *RequestMirroring {
	if x, ok := x.GetRequest().(*Command_RequestMirroring); ok {
		return x.RequestMirroring
	}
	return nil
}

func (x *Command) GetRestrictions() *Restrictions {
	if x, ok := x.GetRequest().(*Command_Restrictions); ok {
		return x.Restrictions
	}
	return nil
}

func (x *Command) GetUnlockUserAccount() *UnlockUserAccount {
	if x, ok := x.GetRequest().(*Command_UnlockUserAccount); ok {
		return x.UnlockUserAccount
	}
	return nil
}

func (x *Command) GetDeleteUser() *DeleteUser {
	if x, ok := x.GetRequest().(*Command_DeleteUser); ok {
		return x.DeleteUser
	}
	return nil
}

func (x *Command) GetEnableLostMode() *EnableLostMode {
	if x, ok := x.GetRequest().(*Command_EnableLostMode); ok {
		return x.EnableLostMode
	}
	return nil
}

func (x *Command) GetInstallApplication() *InstallApplication {
	if x, ok := x.GetRequest().(*Command_InstallApplication); ok {
		return x.InstallApplication
	}
	return nil
}

func (x *Command) GetAccountConfiguration() *AccountConfiguration {
	if x, ok := x.GetRequest().(*Command_AccountConfiguration); ok {
		return x.AccountConfiguration
	}
	return nil
}

func (x *Command) GetApplyRedemptionCode() *ApplyRedemptionCode {
	if x, ok := x.GetRequest().(*Command_ApplyRedemptionCode); ok {
		return x.ApplyRedemptionCode
	}
	return nil
}

func (x *Command) GetManagedApplicationList() *ManagedApplicationList {
	if x, ok := x.GetRequest().(*Command_ManagedApplicationList); ok {
		return x.ManagedApplicationList
	}
	return nil
}

func (x *Command) GetRemoveApplication() *RemoveApplication {
	if x, ok := x.GetRequest().(*Command_RemoveApplication); ok {
		return x.RemoveApplication
	}
	return nil
}

func (x *Command) GetInviteToProgram() *InviteToProgram {
	if x, ok := x.GetRequest().(*Command_InviteToProgram); ok {
		return x.InviteToProgram
	}
	return nil
}

func (x *Command) GetValidataApplications() *ValidateApplications {
	if x, ok := x.GetRequest().(*Command_ValidataApplications); ok {
		return x.ValidataApplications
	}
	return nil
}

func (x *Command) GetInstallMedia() *InstallMedia {
	if x, ok := x.GetRequest().(*Command_InstallMedia); ok {
		return x.InstallMedia
	}
	return nil
}

func (x *Command) GetRemoveMedia() *RemoveMedia {
	if x, ok := x.GetRequest().(*Command_RemoveMedia); ok {
		return x.RemoveMedia
	}
	return nil
}

func (x *Command) GetSettings() *Settings {
	if x, ok := x.GetRequest().(*Command_Settings); ok {
		return x.Settings
	}
	return nil
}

func (x *Command) GetManagedApplicationConfiguration() *ManagedApplicationConfiguration {
	if x, ok := x.GetRequest().(*Command_ManagedApplicationConfiguration); ok {
		return x.ManagedApplicationConfiguration
	}
	return nil
}

func (x *Command) GetManagedApplicationAttributes() *ManagedApplicationAttributes {
	if x, ok := x.GetRequest().(*Command_ManagedApplicationAttributes); ok {
		return x.ManagedApplicationAttributes
	}
	return nil
}

func (x *Command) GetManagedApplicationFeedback() *ManagedApplicationFeedback {
	if x, ok := x.GetRequest().(*Command_ManagedApplicationFeedback); ok {
		return x.ManagedApplicationFeedback
	}
	return nil
}

func (x *Command) GetSetFirmwarePassword() *SetFirmwarePassword {
	if x, ok := x.GetRequest().(*Command_SetFirmwarePassword); ok {
		return x.SetFirmwarePassword
	}
	return nil
}

func (x *Command) GetVerifyFirmwarePassword() *VerifyFirmwarePassword {
	if x, ok := x.GetRequest().(*Command_VerifyFirmwarePassword); ok {
		return x.VerifyFirmwarePassword
	}
	return nil
}

func (x *Command) GetSetAutoAdminPassword() *SetAutoAdminPassword {
	if x, ok := x.GetRequest().(*Command_SetAutoAdminPassword); ok {
		return x.SetAutoAdminPassword
	}
	return nil
}

func (x *Command) GetScheduleOsUpdate() *ScheduleOSUpdate {
	if x, ok := x.GetRequest().(*Command_ScheduleOsUpdate); ok {
		return x.ScheduleOsUpdate
	}
	return nil
}

func (x *Command) GetScheduleOsUpdateScan() *ScheduleOSUpdateScan {
	if x, ok := x.GetRequest().(*Command_ScheduleOsUpdateScan); ok {
		return x.ScheduleOsUpdateScan
	}
	return nil
}

func (x *Command) GetActiveNsExtensions() *ActiveNSExtensions {
	if x, ok := x.GetRequest().(*Command_ActiveNsExtensions); ok {
		return x.ActiveNsExtensions
	}
	return nil
}

func (x *Command) GetRotateFilevaultKey() *RotateFileVaultKey {
	if x, ok := x.GetRequest().(*Command_RotateFilevaultKey); ok {
		return x.RotateFilevaultKey
	}
	return nil
}

func (x *Command) GetInstallEnterpriseApplication() *InstallEnterpriseApplication {
	if x, ok := x.GetRequest().(*Command_InstallEnterpriseApplication); ok {
		return x.InstallEnterpriseApplication
	}
	return nil
}

func (x *Command) GetSetBootstrapToken() *SetBootstrapToken {
	if x, ok := x.GetRequest().(*Command_SetBootstrapToken); ok {
		return x.SetBootstrapToken
	}
	return nil
}

func (x *Command) GetSetRecoveryLock() *SetRecoveryLock {
	if x, ok := x.GetRequest().(*Command_SetRecoveryLock); ok {
		return x.SetRecoveryLock
	}
	return nil
}

func (x *Command) GetVerifyRecoveryLock() *VerifyRecoveryLock {
	if x, ok := x.GetRequest().(*Command_VerifyRecoveryLock); ok {
		return x.VerifyRecoveryLock
	}
	return nil
}

func (x *Command) GetRefreshCellularPlans() *RefreshCellularPlans {
	if x, ok := x.GetRequest().(*Command_RefreshCellularPlans); ok {
		return x.RefreshCellularPlans
	}
	return nil
}

func (x *Command) GetLomDeviceRequestCommand() *LOMDeviceRequest {
	if x, ok := x.GetRequest().(*Command_LomDeviceRequestCommand); ok {
		return x.LomDeviceRequestCommand
	}
	return nil
}

type isCommand_Request interface {
	isCommand_Request()
}

type Command_InstallProfile struct {
	InstallProfile *InstallProfile `protobuf:"bytes,2,opt,name=install_profile,json=installProfile,proto3,oneof"`
}

type Command_RemoveProfile struct {
	RemoveProfile *RemoveProfile `protobuf:"bytes,3,opt,name=remove_profile,json=removeProfile,proto3,oneof"`
}

type Command_InstallProvisioningProfile struct {
	InstallProvisioningProfile *InstallProvisioningProfile `protobuf:"bytes,4,opt,name=install_provisioning_profile,json=installProvisioningProfile,proto3,oneof"`
}

type Command_RemoveProfisioningProfile struct {
	RemoveProfisioningProfile *RemoveProvisioningProfile `protobuf:"bytes,5,opt,name=remove_profisioning_profile,json=removeProfisioningProfile,proto3,oneof"`
}

type Command_InstalledApplicationList struct {
	InstalledApplicationList *InstalledApplicationList `protobuf:"bytes,6,opt,name=installed_application_list,json=installedApplicationList,proto3,oneof"`
}

type Command_DeviceInformation struct {
	DeviceInformation *DeviceInformation `protobuf:"bytes,7,opt,name=device_information,json=deviceInformation,proto3,oneof"`
}

type Command_DeviceLock struct {
	DeviceLock *DeviceLock `protobuf:"bytes,8,opt,name=device_lock,json=deviceLock,proto3,oneof"`
}

type Command_ClearPasscode struct {
	ClearPasscode *ClearPasscode `protobuf:"bytes,9,opt,name=clear_passcode,json=clearPasscode,proto3,oneof"`
}

type Command_EraseDevice struct {
	EraseDevice *EraseDevice `protobuf:"bytes,10,opt,name=erase_device,json=eraseDevice,proto3,oneof"`
}

type Command_RequestMirroring struct {
	RequestMirroring *RequestMirroring `protobuf:"bytes,11,opt,name=request_mirroring,json=requestMirroring,proto3,oneof"`
}

type Command_Restrictions struct {
	Restrictions *Restrictions `protobuf:"bytes,12,opt,name=restrictions,proto3,oneof"`
}

type Command_UnlockUserAccount struct {
	UnlockUserAccount *UnlockUserAccount `protobuf:"bytes,13,opt,name=unlock_user_account,json=unlockUserAccount,proto3,oneof"`
}

type Command_DeleteUser struct {
	DeleteUser *DeleteUser `protobuf:"bytes,14,opt,name=delete_user,json=deleteUser,proto3,oneof"`
}

type Command_EnableLostMode struct {
	EnableLostMode *EnableLostMode `protobuf:"bytes,15,opt,name=enable_lost_mode,json=enableLostMode,proto3,oneof"`
}

type Command_InstallApplication struct {
	InstallApplication *InstallApplication `protobuf:"bytes,16,opt,name=install_application,json=installApplication,proto3,oneof"`
}

type Command_AccountConfiguration struct {
	AccountConfiguration *AccountConfiguration `protobuf:"bytes,17,opt,name=account_configuration,json=accountConfiguration,proto3,oneof"`
}

type Command_ApplyRedemptionCode struct {
	ApplyRedemptionCode *ApplyRedemptionCode `protobuf:"bytes,18,opt,name=apply_redemption_code,json=applyRedemptionCode,proto3,oneof"`
}

type Command_ManagedApplicationList struct {
	ManagedApplicationList *ManagedApplicationList `protobuf:"bytes,19,opt,name=managed_application_list,json=managedApplicationList,proto3,oneof"`
}

type Command_RemoveApplication struct {
	RemoveApplication *RemoveApplication `protobuf:"bytes,20,opt,name=remove_application,json=removeApplication,proto3,oneof"`
}

type Command_InviteToProgram struct {
	InviteToProgram *InviteToProgram `protobuf:"bytes,21,opt,name=invite_to_program,json=inviteToProgram,proto3,oneof"`
}

type Command_ValidataApplications struct {
	ValidataApplications *ValidateApplications `protobuf:"bytes,22,opt,name=validata_applications,json=validataApplications,proto3,oneof"`
}

type Command_InstallMedia struct {
	InstallMedia *InstallMedia `protobuf:"bytes,23,opt,name=install_media,json=installMedia,proto3,oneof"`
}

type Command_RemoveMedia struct {
	RemoveMedia *RemoveMedia `protobuf:"bytes,24,opt,name=remove_media,json=removeMedia,proto3,oneof"`
}

type Command_Settings struct {
	Settings *Settings `protobuf:"bytes,25,opt,name=settings,proto3,oneof"`
}

type Command_ManagedApplicationConfiguration struct {
	ManagedApplicationConfiguration *ManagedApplicationConfiguration `protobuf:"bytes,26,opt,name=managed_application_configuration,json=managedApplicationConfiguration,proto3,oneof"`
}

type Command_ManagedApplicationAttributes struct {
	ManagedApplicationAttributes *ManagedApplicationAttributes `protobuf:"bytes,27,opt,name=managed_application_attributes,json=managedApplicationAttributes,proto3,oneof"`
}

type Command_ManagedApplicationFeedback struct {
	ManagedApplicationFeedback *ManagedApplicationFeedback `protobuf:"bytes,28,opt,name=managed_application_feedback,json=managedApplicationFeedback,proto3,oneof"`
}

type Command_SetFirmwarePassword struct {
	SetFirmwarePassword *SetFirmwarePassword `protobuf:"bytes,29,opt,name=set_firmware_password,json=setFirmwarePassword,proto3,oneof"`
}

type Command_VerifyFirmwarePassword struct {
	VerifyFirmwarePassword *VerifyFirmwarePassword `protobuf:"bytes,30,opt,name=verify_firmware_password,json=verifyFirmwarePassword,proto3,oneof"`
}

type Command_SetAutoAdminPassword struct {
	SetAutoAdminPassword *SetAutoAdminPassword `protobuf:"bytes,31,opt,name=set_auto_admin_password,json=setAutoAdminPassword,proto3,oneof"`
}

type Command_ScheduleOsUpdate struct {
	ScheduleOsUpdate *ScheduleOSUpdate `protobuf:"bytes,32,opt,name=schedule_os_update,json=scheduleOsUpdate,proto3,oneof"`
}

type Command_ScheduleOsUpdateScan struct {
	ScheduleOsUpdateScan *ScheduleOSUpdateScan `protobuf:"bytes,33,opt,name=schedule_os_update_scan,json=scheduleOsUpdateScan,proto3,oneof"`
}

type Command_ActiveNsExtensions struct {
	ActiveNsExtensions *ActiveNSExtensions `protobuf:"bytes,34,opt,name=active_ns_extensions,json=activeNsExtensions,proto3,oneof"`
}

type Command_RotateFilevaultKey struct {
	RotateFilevaultKey *RotateFileVaultKey `protobuf:"bytes,35,opt,name=rotate_filevault_key,json=rotateFilevaultKey,proto3,oneof"`
}

type Command_InstallEnterpriseApplication struct {
	InstallEnterpriseApplication *InstallEnterpriseApplication `protobuf:"bytes,36,opt,name=install_enterprise_application,json=installEnterpriseApplication,proto3,oneof"`
}

type Command_SetBootstrapToken struct {
	SetBootstrapToken *SetBootstrapToken `protobuf:"bytes,37,opt,name=set_bootstrap_token,json=setBootstrapToken,proto3,oneof"`
}

type Command_SetRecoveryLock struct {
	SetRecoveryLock *SetRecoveryLock `protobuf:"bytes,38,opt,name=set_recovery_lock,json=setRecoveryLock,proto3,oneof"`
}

type Command_VerifyRecoveryLock struct {
	VerifyRecoveryLock *VerifyRecoveryLock `protobuf:"bytes,39,opt,name=verify_recovery_lock,json=verifyRecoveryLock,proto3,oneof"`
}

type Command_RefreshCellularPlans struct {
	RefreshCellularPlans *RefreshCellularPlans `protobuf:"bytes,40,opt,name=refresh_cellular_plans,json=refreshCellularPlans,proto3,oneof"`
}

type Command_LomDeviceRequestCommand struct {
	LomDeviceRequestCommand *LOMDeviceRequest `protobuf:"bytes,41,opt,name=lomDeviceRequestCommand,proto3,oneof"`
}

func (*Command_InstallProfile) isCommand_Request() {}

func (*Command_RemoveProfile) isCommand_Request() {}

func (*Command_InstallProvisioningProfile) isCommand_Request() {}

func (*Command_RemoveProfisioningProfile) isCommand_Request() {}

func (*Command_InstalledApplicationList) isCommand_Request() {}

func (*Command_DeviceInformation) isCommand_Request() {}

func (*Command_DeviceLock) isCommand_Request() {}

func (*Command_ClearPasscode) isCommand_Request() {}

func (*Command_EraseDevice) isCommand_Request() {}

func (*Command_RequestMirroring) isCommand_Request() {}

func (*Command_Restrictions) isCommand_Request() {}

func (*Command_UnlockUserAccount) isCommand_Request() {}

func (*Command_DeleteUser) isCommand_Request() {}

func (*Command_EnableLostMode) isCommand_Request() {}

func (*Command_InstallApplication) isCommand_Request() {}

func (*Command_AccountConfiguration) isCommand_Request() {}

func (*Command_ApplyRedemptionCode) isCommand_Request() {}

func (*Command_ManagedApplicationList) isCommand_Request() {}

func (*Command_RemoveApplication) isCommand_Request() {}

func (*Command_InviteToProgram) isCommand_Request() {}

func (*Command_ValidataApplications) isCommand_Request() {}

func (*Command_InstallMedia) isCommand_Request() {}

func (*Command_RemoveMedia) isCommand_Request() {}

func (*Command_Settings) isCommand_Request() {}

func (*Command_ManagedApplicationConfiguration) isCommand_Request() {}

func (*Command_ManagedApplicationAttributes) isCommand_Request() {}

func (*Command_ManagedApplicationFeedback) isCommand_Request() {}

func (*Command_SetFirmwarePassword) isCommand_Request() {}

func (*Command_VerifyFirmwarePassword) isCommand_Request() {}

func (*Command_SetAutoAdminPassword) isCommand_Request() {}

func (*Command_ScheduleOsUpdate) isCommand_Request() {}

func (*Command_ScheduleOsUpdateScan) isCommand_Request() {}

func (*Command_ActiveNsExtensions) isCommand_Request() {}

func (*Command_RotateFilevaultKey) isCommand_Request() {}

func (*Command_InstallEnterpriseApplication) isCommand_Request() {}

func (*Command_SetBootstrapToken) isCommand_Request() {}

func (*Command_SetRecoveryLock) isCommand_Request() {}

func (*Command_VerifyRecoveryLock) isCommand_Request() {}

func (*Command_RefreshCellularPlans) isCommand_Request() {}

func (*Command_LomDeviceRequestCommand) isCommand_Request() {}

type InstallProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"` // The mobileconfig data.
}

func (x *InstallProfile) Reset() {
	*x = InstallProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallProfile) ProtoMessage() {}

func (x *InstallProfile) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallProfile.ProtoReflect.Descriptor instead.
func (*InstallProfile) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{2}
}

func (x *InstallProfile) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type RemoveProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *RemoveProfile) Reset() {
	*x = RemoveProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProfile) ProtoMessage() {}

func (x *RemoveProfile) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProfile.ProtoReflect.Descriptor instead.
func (*RemoveProfile) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveProfile) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type InstallProvisioningProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvisioningProfile []byte `protobuf:"bytes,1,opt,name=provisioning_profile,json=provisioningProfile,proto3" json:"provisioning_profile,omitempty"`
}

func (x *InstallProvisioningProfile) Reset() {
	*x = InstallProvisioningProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallProvisioningProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallProvisioningProfile) ProtoMessage() {}

func (x *InstallProvisioningProfile) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallProvisioningProfile.ProtoReflect.Descriptor instead.
func (*InstallProvisioningProfile) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{4}
}

func (x *InstallProvisioningProfile) GetProvisioningProfile() []byte {
	if x != nil {
		return x.ProvisioningProfile
	}
	return nil
}

type RemoveProvisioningProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RemoveProvisioningProfile) Reset() {
	*x = RemoveProvisioningProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProvisioningProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProvisioningProfile) ProtoMessage() {}

func (x *RemoveProvisioningProfile) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProvisioningProfile.ProtoReflect.Descriptor instead.
func (*RemoveProvisioningProfile) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveProvisioningProfile) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type InstalledApplicationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers     []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	ManagedAppsOnly bool     `protobuf:"varint,2,opt,name=managed_apps_only,json=managedAppsOnly,proto3" json:"managed_apps_only,omitempty"`
}

func (x *InstalledApplicationList) Reset() {
	*x = InstalledApplicationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstalledApplicationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledApplicationList) ProtoMessage() {}

func (x *InstalledApplicationList) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledApplicationList.ProtoReflect.Descriptor instead.
func (*InstalledApplicationList) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{6}
}

func (x *InstalledApplicationList) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *InstalledApplicationList) GetManagedAppsOnly() bool {
	if x != nil {
		return x.ManagedAppsOnly
	}
	return false
}

type DeviceInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []string `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *DeviceInformation) Reset() {
	*x = DeviceInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInformation) ProtoMessage() {}

func (x *DeviceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInformation.ProtoReflect.Descriptor instead.
func (*DeviceInformation) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceInformation) GetQueries() []string {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ClearPasscode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockToken []byte `protobuf:"bytes,1,opt,name=unlock_token,json=unlockToken,proto3" json:"unlock_token,omitempty"`
}

func (x *ClearPasscode) Reset() {
	*x = ClearPasscode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearPasscode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearPasscode) ProtoMessage() {}

func (x *ClearPasscode) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearPasscode.ProtoReflect.Descriptor instead.
func (*ClearPasscode) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{8}
}

func (x *ClearPasscode) GetUnlockToken() []byte {
	if x != nil {
		return x.UnlockToken
	}
	return nil
}

type DeviceLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pin         string `protobuf:"bytes,1,opt,name=pin,proto3" json:"pin,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *DeviceLock) Reset() {
	*x = DeviceLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceLock) ProtoMessage() {}

func (x *DeviceLock) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceLock.ProtoReflect.Descriptor instead.
func (*DeviceLock) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceLock) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

func (x *DeviceLock) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeviceLock) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type EraseDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pin                    string `protobuf:"bytes,1,opt,name=pin,proto3" json:"pin,omitempty"`
	PreserveDataPlan       bool   `protobuf:"varint,2,opt,name=preserve_data_plan,json=preserveDataPlan,proto3" json:"preserve_data_plan,omitempty"`
	DisallowProximitySetup bool   `protobuf:"varint,3,opt,name=disallow_proximity_setup,json=disallowProximitySetup,proto3" json:"disallow_proximity_setup,omitempty"`
}

func (x *EraseDevice) Reset() {
	*x = EraseDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EraseDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EraseDevice) ProtoMessage() {}

func (x *EraseDevice) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EraseDevice.ProtoReflect.Descriptor instead.
func (*EraseDevice) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{10}
}

func (x *EraseDevice) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

func (x *EraseDevice) GetPreserveDataPlan() bool {
	if x != nil {
		return x.PreserveDataPlan
	}
	return false
}

func (x *EraseDevice) GetDisallowProximitySetup() bool {
	if x != nil {
		return x.DisallowProximitySetup
	}
	return false
}

type RequestMirroring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationName     string `protobuf:"bytes,1,opt,name=destination_name,json=destinationName,proto3" json:"destination_name,omitempty"`
	DestinationDeviceId string `protobuf:"bytes,2,opt,name=destination_device_id,json=destinationDeviceId,proto3" json:"destination_device_id,omitempty"`
	ScanTime            string `protobuf:"bytes,3,opt,name=scan_time,json=scanTime,proto3" json:"scan_time,omitempty"`
	Password            string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RequestMirroring) Reset() {
	*x = RequestMirroring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMirroring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMirroring) ProtoMessage() {}

func (x *RequestMirroring) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMirroring.ProtoReflect.Descriptor instead.
func (*RequestMirroring) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{11}
}

func (x *RequestMirroring) GetDestinationName() string {
	if x != nil {
		return x.DestinationName
	}
	return ""
}

func (x *RequestMirroring) GetDestinationDeviceId() string {
	if x != nil {
		return x.DestinationDeviceId
	}
	return ""
}

func (x *RequestMirroring) GetScanTime() string {
	if x != nil {
		return x.ScanTime
	}
	return ""
}

func (x *RequestMirroring) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Restrictions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileRestrictions bool `protobuf:"varint,1,opt,name=profile_restrictions,json=profileRestrictions,proto3" json:"profile_restrictions,omitempty"`
}

func (x *Restrictions) Reset() {
	*x = Restrictions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restrictions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restrictions) ProtoMessage() {}

func (x *Restrictions) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restrictions.ProtoReflect.Descriptor instead.
func (*Restrictions) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{12}
}

func (x *Restrictions) GetProfileRestrictions() bool {
	if x != nil {
		return x.ProfileRestrictions
	}
	return false
}

type UnlockUserAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UnlockUserAccount) Reset() {
	*x = UnlockUserAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUserAccount) ProtoMessage() {}

func (x *UnlockUserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUserAccount.ProtoReflect.Descriptor instead.
func (*UnlockUserAccount) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{13}
}

func (x *UnlockUserAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type DeleteUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ForceDeletion bool   `protobuf:"varint,2,opt,name=force_deletion,json=forceDeletion,proto3" json:"force_deletion,omitempty"`
}

func (x *DeleteUser) Reset() {
	*x = DeleteUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUser) ProtoMessage() {}

func (x *DeleteUser) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUser.ProtoReflect.Descriptor instead.
func (*DeleteUser) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DeleteUser) GetForceDeletion() bool {
	if x != nil {
		return x.ForceDeletion
	}
	return false
}

type EnableLostMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Footnote    string `protobuf:"bytes,3,opt,name=footnote,proto3" json:"footnote,omitempty"`
}

func (x *EnableLostMode) Reset() {
	*x = EnableLostMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableLostMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableLostMode) ProtoMessage() {}

func (x *EnableLostMode) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableLostMode.ProtoReflect.Descriptor instead.
func (*EnableLostMode) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{15}
}

func (x *EnableLostMode) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EnableLostMode) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *EnableLostMode) GetFootnote() string {
	if x != nil {
		return x.Footnote
	}
	return ""
}

type InstallApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItunesStoreId         int64                            `protobuf:"varint,1,opt,name=itunes_store_id,json=itunesStoreId,proto3" json:"itunes_store_id,omitempty"`
	Identifier            string                           `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Options               *InstallApplicationOptions       `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	ManifestUrl           string                           `protobuf:"bytes,4,opt,name=manifest_url,json=manifestUrl,proto3" json:"manifest_url,omitempty"`
	ManagementFlags       int64                            `protobuf:"varint,5,opt,name=management_flags,json=managementFlags,proto3" json:"management_flags,omitempty"` // bitwise OR
	Configuration         *InstallApplicationConfiguration `protobuf:"bytes,6,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Attributes            *InstallApplicationAttributes    `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	ChangeManagementState string                           `protobuf:"bytes,8,opt,name=change_management_state,json=changeManagementState,proto3" json:"change_management_state,omitempty"`
}

func (x *InstallApplication) Reset() {
	*x = InstallApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallApplication) ProtoMessage() {}

func (x *InstallApplication) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallApplication.ProtoReflect.Descriptor instead.
func (*InstallApplication) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{16}
}

func (x *InstallApplication) GetItunesStoreId() int64 {
	if x != nil {
		return x.ItunesStoreId
	}
	return 0
}

func (x *InstallApplication) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *InstallApplication) GetOptions() *InstallApplicationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *InstallApplication) GetManifestUrl() string {
	if x != nil {
		return x.ManifestUrl
	}
	return ""
}

func (x *InstallApplication) GetManagementFlags() int64 {
	if x != nil {
		return x.ManagementFlags
	}
	return 0
}

func (x *InstallApplication) GetConfiguration() *InstallApplicationConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *InstallApplication) GetAttributes() *InstallApplicationAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *InstallApplication) GetChangeManagementState() string {
	if x != nil {
		return x.ChangeManagementState
	}
	return ""
}

type InstallApplicationOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseMethod int64 `protobuf:"varint,1,opt,name=purchase_method,json=purchaseMethod,proto3" json:"purchase_method,omitempty"`
}

func (x *InstallApplicationOptions) Reset() {
	*x = InstallApplicationOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallApplicationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallApplicationOptions) ProtoMessage() {}

func (x *InstallApplicationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallApplicationOptions.ProtoReflect.Descriptor instead.
func (*InstallApplicationOptions) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{17}
}

func (x *InstallApplicationOptions) GetPurchaseMethod() int64 {
	if x != nil {
		return x.PurchaseMethod
	}
	return 0
}

type InstallApplicationConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstallApplicationConfiguration) Reset() {
	*x = InstallApplicationConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallApplicationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallApplicationConfiguration) ProtoMessage() {}

func (x *InstallApplicationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallApplicationConfiguration.ProtoReflect.Descriptor instead.
func (*InstallApplicationConfiguration) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{18}
}

type InstallApplicationAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstallApplicationAttributes) Reset() {
	*x = InstallApplicationAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallApplicationAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallApplicationAttributes) ProtoMessage() {}

func (x *InstallApplicationAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallApplicationAttributes.ProtoReflect.Descriptor instead.
func (*InstallApplicationAttributes) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{19}
}

type InstallEnterpriseApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest                       *Manifest `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
	ManifestUrl                    string    `protobuf:"bytes,2,opt,name=manifest_url,json=manifestUrl,proto3" json:"manifest_url,omitempty"`
	ManifestUrlPinningCerts        [][]byte  `protobuf:"bytes,3,rep,name=manifest_url_pinning_certs,json=manifestUrlPinningCerts,proto3" json:"manifest_url_pinning_certs,omitempty"`
	PinningRevocationCheckRequired bool      `protobuf:"varint,4,opt,name=pinning_revocation_check_required,json=pinningRevocationCheckRequired,proto3" json:"pinning_revocation_check_required,omitempty"`
}

func (x *InstallEnterpriseApplication) Reset() {
	*x = InstallEnterpriseApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallEnterpriseApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallEnterpriseApplication) ProtoMessage() {}

func (x *InstallEnterpriseApplication) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallEnterpriseApplication.ProtoReflect.Descriptor instead.
func (*InstallEnterpriseApplication) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{20}
}

func (x *InstallEnterpriseApplication) GetManifest() *Manifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *InstallEnterpriseApplication) GetManifestUrl() string {
	if x != nil {
		return x.ManifestUrl
	}
	return ""
}

func (x *InstallEnterpriseApplication) GetManifestUrlPinningCerts() [][]byte {
	if x != nil {
		return x.ManifestUrlPinningCerts
	}
	return nil
}

func (x *InstallEnterpriseApplication) GetPinningRevocationCheckRequired() bool {
	if x != nil {
		return x.PinningRevocationCheckRequired
	}
	return false
}

type Manifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManifestItems []*ManifestItem `protobuf:"bytes,1,rep,name=manifest_items,json=manifestItems,proto3" json:"manifest_items,omitempty"`
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{21}
}

func (x *Manifest) GetManifestItems() []*ManifestItem {
	if x != nil {
		return x.ManifestItems
	}
	return nil
}

type ManifestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets   []*Asset  `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	Metadata *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ManifestItem) Reset() {
	*x = ManifestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestItem) ProtoMessage() {}

func (x *ManifestItem) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestItem.ProtoReflect.Descriptor instead.
func (*ManifestItem) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{22}
}

func (x *ManifestItem) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ManifestItem) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind       string   `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Md5Size    int64    `protobuf:"varint,2,opt,name=md5_size,json=md5Size,proto3" json:"md5_size,omitempty"`
	Md5S       []string `protobuf:"bytes,3,rep,name=md5s,proto3" json:"md5s,omitempty"`
	Url        string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Sha256Size int64    `protobuf:"varint,5,opt,name=sha256_size,json=sha256Size,proto3" json:"sha256_size,omitempty"`
	Sha256S    []string `protobuf:"bytes,6,rep,name=sha256s,proto3" json:"sha256s,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{23}
}

func (x *Asset) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Asset) GetMd5Size() int64 {
	if x != nil {
		return x.Md5Size
	}
	return 0
}

func (x *Asset) GetMd5S() []string {
	if x != nil {
		return x.Md5S
	}
	return nil
}

func (x *Asset) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Asset) GetSha256Size() int64 {
	if x != nil {
		return x.Sha256Size
	}
	return 0
}

func (x *Asset) GetSha256S() []string {
	if x != nil {
		return x.Sha256S
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleIdentifier string        `protobuf:"bytes,1,opt,name=bundle_identifier,json=bundleIdentifier,proto3" json:"bundle_identifier,omitempty"`
	BundleVersion    string        `protobuf:"bytes,2,opt,name=bundle_version,json=bundleVersion,proto3" json:"bundle_version,omitempty"`
	Items            []*BundleInfo `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Kind             string        `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	Subtitle         string        `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Title            string        `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	SizeInBytes      int64         `protobuf:"varint,7,opt,name=size_in_bytes,json=sizeInBytes,proto3" json:"size_in_bytes,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{24}
}

func (x *Metadata) GetBundleIdentifier() string {
	if x != nil {
		return x.BundleIdentifier
	}
	return ""
}

func (x *Metadata) GetBundleVersion() string {
	if x != nil {
		return x.BundleVersion
	}
	return ""
}

func (x *Metadata) GetItems() []*BundleInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Metadata) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Metadata) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *Metadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Metadata) GetSizeInBytes() int64 {
	if x != nil {
		return x.SizeInBytes
	}
	return 0
}

type BundleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleIdentifier string `protobuf:"bytes,1,opt,name=bundle_identifier,json=bundleIdentifier,proto3" json:"bundle_identifier,omitempty"`
	BundleVersion    string `protobuf:"bytes,2,opt,name=bundle_version,json=bundleVersion,proto3" json:"bundle_version,omitempty"`
}

func (x *BundleInfo) Reset() {
	*x = BundleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleInfo) ProtoMessage() {}

func (x *BundleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleInfo.ProtoReflect.Descriptor instead.
func (*BundleInfo) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{25}
}

func (x *BundleInfo) GetBundleIdentifier() string {
	if x != nil {
		return x.BundleIdentifier
	}
	return ""
}

func (x *BundleInfo) GetBundleVersion() string {
	if x != nil {
		return x.BundleVersion
	}
	return ""
}

type ApplyRedemptionCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	RedemptionCode string `protobuf:"bytes,2,opt,name=redemption_code,json=redemptionCode,proto3" json:"redemption_code,omitempty"`
}

func (x *ApplyRedemptionCode) Reset() {
	*x = ApplyRedemptionCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRedemptionCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRedemptionCode) ProtoMessage() {}

func (x *ApplyRedemptionCode) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRedemptionCode.ProtoReflect.Descriptor instead.
func (*ApplyRedemptionCode) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{26}
}

func (x *ApplyRedemptionCode) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ApplyRedemptionCode) GetRedemptionCode() string {
	if x != nil {
		return x.RedemptionCode
	}
	return ""
}

type ManagedApplicationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *ManagedApplicationList) Reset() {
	*x = ManagedApplicationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedApplicationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedApplicationList) ProtoMessage() {}

func (x *ManagedApplicationList) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedApplicationList.ProtoReflect.Descriptor instead.
func (*ManagedApplicationList) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{27}
}

func (x *ManagedApplicationList) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type RemoveApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *RemoveApplication) Reset() {
	*x = RemoveApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplication) ProtoMessage() {}

func (x *RemoveApplication) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplication.ProtoReflect.Descriptor instead.
func (*RemoveApplication) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveApplication) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type InviteToProgram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramId     string `protobuf:"bytes,1,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	InvitationUrl string `protobuf:"bytes,2,opt,name=invitation_url,json=invitationUrl,proto3" json:"invitation_url,omitempty"`
}

func (x *InviteToProgram) Reset() {
	*x = InviteToProgram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteToProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteToProgram) ProtoMessage() {}

func (x *InviteToProgram) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteToProgram.ProtoReflect.Descriptor instead.
func (*InviteToProgram) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{29}
}

func (x *InviteToProgram) GetProgramId() string {
	if x != nil {
		return x.ProgramId
	}
	return ""
}

func (x *InviteToProgram) GetInvitationUrl() string {
	if x != nil {
		return x.InvitationUrl
	}
	return ""
}

type ValidateApplications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *ValidateApplications) Reset() {
	*x = ValidateApplications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateApplications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateApplications) ProtoMessage() {}

func (x *ValidateApplications) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateApplications.ProtoReflect.Descriptor instead.
func (*ValidateApplications) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{30}
}

func (x *ValidateApplications) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type AccountConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkipPrimarySetupAccountCreation     bool                      `protobuf:"varint,1,opt,name=skip_primary_setup_account_creation,json=skipPrimarySetupAccountCreation,proto3" json:"skip_primary_setup_account_creation,omitempty"`
	SetPrimarySetupAccountAsRegularUser bool                      `protobuf:"varint,2,opt,name=set_primary_setup_account_as_regular_user,json=setPrimarySetupAccountAsRegularUser,proto3" json:"set_primary_setup_account_as_regular_user,omitempty"`
	DontAutoPopulatePrimaryAccountInfo  bool                      `protobuf:"varint,4,opt,name=dont_auto_populate_primary_account_info,json=dontAutoPopulatePrimaryAccountInfo,proto3" json:"dont_auto_populate_primary_account_info,omitempty"`
	LockPrimaryAccountInfo              bool                      `protobuf:"varint,5,opt,name=lock_primary_account_info,json=lockPrimaryAccountInfo,proto3" json:"lock_primary_account_info,omitempty"`
	PrimaryAccountFullName              string                    `protobuf:"bytes,6,opt,name=primary_account_full_name,json=primaryAccountFullName,proto3" json:"primary_account_full_name,omitempty"`
	PrimaryAccountUserName              string                    `protobuf:"bytes,7,opt,name=primary_account_user_name,json=primaryAccountUserName,proto3" json:"primary_account_user_name,omitempty"`
	AutoSetupAdminAccounts              []*AutoSetupAdminAccounts `protobuf:"bytes,3,rep,name=auto_setup_admin_accounts,json=autoSetupAdminAccounts,proto3" json:"auto_setup_admin_accounts,omitempty"`
}

func (x *AccountConfiguration) Reset() {
	*x = AccountConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountConfiguration) ProtoMessage() {}

func (x *AccountConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountConfiguration.ProtoReflect.Descriptor instead.
func (*AccountConfiguration) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{31}
}

func (x *AccountConfiguration) GetSkipPrimarySetupAccountCreation() bool {
	if x != nil {
		return x.SkipPrimarySetupAccountCreation
	}
	return false
}

func (x *AccountConfiguration) GetSetPrimarySetupAccountAsRegularUser() bool {
	if x != nil {
		return x.SetPrimarySetupAccountAsRegularUser
	}
	return false
}

func (x *AccountConfiguration) GetDontAutoPopulatePrimaryAccountInfo() bool {
	if x != nil {
		return x.DontAutoPopulatePrimaryAccountInfo
	}
	return false
}

func (x *AccountConfiguration) GetLockPrimaryAccountInfo() bool {
	if x != nil {
		return x.LockPrimaryAccountInfo
	}
	return false
}

func (x *AccountConfiguration) GetPrimaryAccountFullName() string {
	if x != nil {
		return x.PrimaryAccountFullName
	}
	return ""
}

func (x *AccountConfiguration) GetPrimaryAccountUserName() string {
	if x != nil {
		return x.PrimaryAccountUserName
	}
	return ""
}

func (x *AccountConfiguration) GetAutoSetupAdminAccounts() []*AutoSetupAdminAccounts {
	if x != nil {
		return x.AutoSetupAdminAccounts
	}
	return nil
}

type AutoSetupAdminAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortName    string `protobuf:"bytes,1,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	FullName     string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	PasswordHash []byte `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	Hidden       bool   `protobuf:"varint,4,opt,name=hidden,proto3" json:"hidden,omitempty"`
}

func (x *AutoSetupAdminAccounts) Reset() {
	*x = AutoSetupAdminAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoSetupAdminAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoSetupAdminAccounts) ProtoMessage() {}

func (x *AutoSetupAdminAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoSetupAdminAccounts.ProtoReflect.Descriptor instead.
func (*AutoSetupAdminAccounts) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{32}
}

func (x *AutoSetupAdminAccounts) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *AutoSetupAdminAccounts) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *AutoSetupAdminAccounts) GetPasswordHash() []byte {
	if x != nil {
		return x.PasswordHash
	}
	return nil
}

func (x *AutoSetupAdminAccounts) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

type InstallMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItunesStoreId int64  `protobuf:"varint,1,opt,name=itunes_store_id,json=itunesStoreId,proto3" json:"itunes_store_id,omitempty"`
	MediaUrl      string `protobuf:"bytes,2,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	MediaType     string `protobuf:"bytes,3,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
}

func (x *InstallMedia) Reset() {
	*x = InstallMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallMedia) ProtoMessage() {}

func (x *InstallMedia) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallMedia.ProtoReflect.Descriptor instead.
func (*InstallMedia) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{33}
}

func (x *InstallMedia) GetItunesStoreId() int64 {
	if x != nil {
		return x.ItunesStoreId
	}
	return 0
}

func (x *InstallMedia) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *InstallMedia) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

type RemoveMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType     string `protobuf:"bytes,1,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	ItunesStoreId int64  `protobuf:"varint,2,opt,name=itunes_store_id,json=itunesStoreId,proto3" json:"itunes_store_id,omitempty"`
	PersistentId  string `protobuf:"bytes,3,opt,name=persistent_id,json=persistentId,proto3" json:"persistent_id,omitempty"`
}

func (x *RemoveMedia) Reset() {
	*x = RemoveMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMedia) ProtoMessage() {}

func (x *RemoveMedia) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMedia.ProtoReflect.Descriptor instead.
func (*RemoveMedia) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveMedia) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *RemoveMedia) GetItunesStoreId() int64 {
	if x != nil {
		return x.ItunesStoreId
	}
	return 0
}

func (x *RemoveMedia) GetPersistentId() string {
	if x != nil {
		return x.PersistentId
	}
	return ""
}

type LOMDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestList []*LOMDeviceRequestCommand `protobuf:"bytes,1,rep,name=requestList,proto3" json:"requestList,omitempty"`
}

func (x *LOMDeviceRequest) Reset() {
	*x = LOMDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LOMDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LOMDeviceRequest) ProtoMessage() {}

func (x *LOMDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LOMDeviceRequest.ProtoReflect.Descriptor instead.
func (*LOMDeviceRequest) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{35}
}

func (x *LOMDeviceRequest) GetRequestList() []*LOMDeviceRequestCommand {
	if x != nil {
		return x.RequestList
	}
	return nil
}

type LOMDeviceRequestCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDNSName            string   `protobuf:"bytes,1,opt,name=deviceDNSName,proto3" json:"deviceDNSName,omitempty"`
	DeviceRequestType        string   `protobuf:"bytes,2,opt,name=deviceRequestType,proto3" json:"deviceRequestType,omitempty"`
	DeviceRequestUUID        string   `protobuf:"bytes,3,opt,name=deviceRequestUUID,proto3" json:"deviceRequestUUID,omitempty"`
	LomProtocolVersion       int64    `protobuf:"varint,4,opt,name=lomProtocolVersion,proto3" json:"lomProtocolVersion,omitempty"`
	PrimaryIPv6AddressList   []string `protobuf:"bytes,5,rep,name=primaryIPv6AddressList,proto3" json:"primaryIPv6AddressList,omitempty"`
	SecondaryIPv6AddressList []string `protobuf:"bytes,6,rep,name=secondaryIPv6AddressList,proto3" json:"secondaryIPv6AddressList,omitempty"`
}

func (x *LOMDeviceRequestCommand) Reset() {
	*x = LOMDeviceRequestCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LOMDeviceRequestCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LOMDeviceRequestCommand) ProtoMessage() {}

func (x *LOMDeviceRequestCommand) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LOMDeviceRequestCommand.ProtoReflect.Descriptor instead.
func (*LOMDeviceRequestCommand) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{36}
}

func (x *LOMDeviceRequestCommand) GetDeviceDNSName() string {
	if x != nil {
		return x.DeviceDNSName
	}
	return ""
}

func (x *LOMDeviceRequestCommand) GetDeviceRequestType() string {
	if x != nil {
		return x.DeviceRequestType
	}
	return ""
}

func (x *LOMDeviceRequestCommand) GetDeviceRequestUUID() string {
	if x != nil {
		return x.DeviceRequestUUID
	}
	return ""
}

func (x *LOMDeviceRequestCommand) GetLomProtocolVersion() int64 {
	if x != nil {
		return x.LomProtocolVersion
	}
	return 0
}

func (x *LOMDeviceRequestCommand) GetPrimaryIPv6AddressList() []string {
	if x != nil {
		return x.PrimaryIPv6AddressList
	}
	return nil
}

func (x *LOMDeviceRequestCommand) GetSecondaryIPv6AddressList() []string {
	if x != nil {
		return x.SecondaryIPv6AddressList
	}
	return nil
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings []*Setting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{37}
}

func (x *Settings) GetSettings() []*Setting {
	if x != nil {
		return x.Settings
	}
	return nil
}

type Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item                     string                           `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	DeviceName               *DeviceNameSetting               `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Hostname                 *HostnameSetting                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	VoiceRoaming             *VoiceRoamingSetting             `protobuf:"bytes,4,opt,name=voice_roaming,json=voiceRoaming,proto3" json:"voice_roaming,omitempty"`
	PersonalHotspot          *PersonalHotspotSetting          `protobuf:"bytes,5,opt,name=personal_hotspot,json=personalHotspot,proto3" json:"personal_hotspot,omitempty"`
	Wallpaper                *WallpaperSetting                `protobuf:"bytes,6,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	DataRoaming              *DataRoamingSetting              `protobuf:"bytes,7,opt,name=data_roaming,json=dataRoaming,proto3" json:"data_roaming,omitempty"`
	Bluetooth                *BluetoothSetting                `protobuf:"bytes,8,opt,name=bluetooth,proto3" json:"bluetooth,omitempty"`
	ApplicationAttributes    *ApplicationAttributesSetting    `protobuf:"bytes,9,opt,name=application_attributes,json=applicationAttributes,proto3" json:"application_attributes,omitempty"`
	MdmOptions               *MDMOptionsSetting               `protobuf:"bytes,10,opt,name=mdm_options,json=mdmOptions,proto3" json:"mdm_options,omitempty"`
	PasscodeLockGracePeriod  *PasscodeLockGracePeriodSetting  `protobuf:"bytes,11,opt,name=passcode_lock_grace_period,json=passcodeLockGracePeriod,proto3" json:"passcode_lock_grace_period,omitempty"`
	MaximumResidentUsers     *MaximumResidentUsersSetting     `protobuf:"bytes,12,opt,name=maximum_resident_users,json=maximumResidentUsers,proto3" json:"maximum_resident_users,omitempty"`
	DiagnosticSubmission     *DiagnosticSubmissionSetting     `protobuf:"bytes,13,opt,name=diagnostic_submission,json=diagnosticSubmission,proto3" json:"diagnostic_submission,omitempty"`
	AppAnalytics             *AppAnalyticsSetting             `protobuf:"bytes,14,opt,name=app_analytics,json=appAnalytics,proto3" json:"app_analytics,omitempty"`
	ApplicationConfiguration *ApplicationConfigurationSetting `protobuf:"bytes,15,opt,name=application_configuration,json=applicationConfiguration,proto3" json:"application_configuration,omitempty"`
	TimeZone                 *TimeZoneSetting                 `protobuf:"bytes,16,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	SoftwareUpdateSettings   *SoftwareUpdateSettingsSetting   `protobuf:"bytes,17,opt,name=software_update_settings,json=softwareUpdateSettings,proto3" json:"software_update_settings,omitempty"`
}

func (x *Setting) Reset() {
	*x = Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{38}
}

func (x *Setting) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *Setting) GetDeviceName() *DeviceNameSetting {
	if x != nil {
		return x.DeviceName
	}
	return nil
}

func (x *Setting) GetHostname() *HostnameSetting {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *Setting) GetVoiceRoaming() *VoiceRoamingSetting {
	if x != nil {
		return x.VoiceRoaming
	}
	return nil
}

func (x *Setting) GetPersonalHotspot() *PersonalHotspotSetting {
	if x != nil {
		return x.PersonalHotspot
	}
	return nil
}

func (x *Setting) GetWallpaper() *WallpaperSetting {
	if x != nil {
		return x.Wallpaper
	}
	return nil
}

func (x *Setting) GetDataRoaming() *DataRoamingSetting {
	if x != nil {
		return x.DataRoaming
	}
	return nil
}

func (x *Setting) GetBluetooth() *BluetoothSetting {
	if x != nil {
		return x.Bluetooth
	}
	return nil
}

func (x *Setting) GetApplicationAttributes() *ApplicationAttributesSetting {
	if x != nil {
		return x.ApplicationAttributes
	}
	return nil
}

func (x *Setting) GetMdmOptions() *MDMOptionsSetting {
	if x != nil {
		return x.MdmOptions
	}
	return nil
}

func (x *Setting) GetPasscodeLockGracePeriod() *PasscodeLockGracePeriodSetting {
	if x != nil {
		return x.PasscodeLockGracePeriod
	}
	return nil
}

func (x *Setting) GetMaximumResidentUsers() *MaximumResidentUsersSetting {
	if x != nil {
		return x.MaximumResidentUsers
	}
	return nil
}

func (x *Setting) GetDiagnosticSubmission() *DiagnosticSubmissionSetting {
	if x != nil {
		return x.DiagnosticSubmission
	}
	return nil
}

func (x *Setting) GetAppAnalytics() *AppAnalyticsSetting {
	if x != nil {
		return x.AppAnalytics
	}
	return nil
}

func (x *Setting) GetApplicationConfiguration() *ApplicationConfigurationSetting {
	if x != nil {
		return x.ApplicationConfiguration
	}
	return nil
}

func (x *Setting) GetTimeZone() *TimeZoneSetting {
	if x != nil {
		return x.TimeZone
	}
	return nil
}

func (x *Setting) GetSoftwareUpdateSettings() *SoftwareUpdateSettingsSetting {
	if x != nil {
		return x.SoftwareUpdateSettings
	}
	return nil
}

type VoiceRoamingSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *VoiceRoamingSetting) Reset() {
	*x = VoiceRoamingSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceRoamingSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRoamingSetting) ProtoMessage() {}

func (x *VoiceRoamingSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRoamingSetting.ProtoReflect.Descriptor instead.
func (*VoiceRoamingSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{39}
}

func (x *VoiceRoamingSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type PersonalHotspotSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PersonalHotspotSetting) Reset() {
	*x = PersonalHotspotSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalHotspotSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalHotspotSetting) ProtoMessage() {}

func (x *PersonalHotspotSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalHotspotSetting.ProtoReflect.Descriptor instead.
func (*PersonalHotspotSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{40}
}

func (x *PersonalHotspotSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type WallpaperSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Where int64  `protobuf:"varint,2,opt,name=where,proto3" json:"where,omitempty"`
}

func (x *WallpaperSetting) Reset() {
	*x = WallpaperSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WallpaperSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WallpaperSetting) ProtoMessage() {}

func (x *WallpaperSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WallpaperSetting.ProtoReflect.Descriptor instead.
func (*WallpaperSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{41}
}

func (x *WallpaperSetting) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *WallpaperSetting) GetWhere() int64 {
	if x != nil {
		return x.Where
	}
	return 0
}

type DataRoamingSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *DataRoamingSetting) Reset() {
	*x = DataRoamingSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRoamingSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRoamingSetting) ProtoMessage() {}

func (x *DataRoamingSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRoamingSetting.ProtoReflect.Descriptor instead.
func (*DataRoamingSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{42}
}

func (x *DataRoamingSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type BluetoothSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *BluetoothSetting) Reset() {
	*x = BluetoothSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothSetting) ProtoMessage() {}

func (x *BluetoothSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothSetting.ProtoReflect.Descriptor instead.
func (*BluetoothSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{43}
}

func (x *BluetoothSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ApplicationAttributesSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier            string                 `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	ApplicationAttributes *ApplicationAttributes `protobuf:"bytes,2,opt,name=application_attributes,json=applicationAttributes,proto3" json:"application_attributes,omitempty"`
}

func (x *ApplicationAttributesSetting) Reset() {
	*x = ApplicationAttributesSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttributesSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttributesSetting) ProtoMessage() {}

func (x *ApplicationAttributesSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttributesSetting.ProtoReflect.Descriptor instead.
func (*ApplicationAttributesSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{44}
}

func (x *ApplicationAttributesSetting) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ApplicationAttributesSetting) GetApplicationAttributes() *ApplicationAttributes {
	if x != nil {
		return x.ApplicationAttributes
	}
	return nil
}

type ApplicationConfigurationSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier                  string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	ConfigurationDictionaryData []byte `protobuf:"bytes,2,opt,name=configuration_dictionary_data,json=configurationDictionaryData,proto3" json:"configuration_dictionary_data,omitempty"` // A serialized plist of the dictionary.
}

func (x *ApplicationConfigurationSetting) Reset() {
	*x = ApplicationConfigurationSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationConfigurationSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfigurationSetting) ProtoMessage() {}

func (x *ApplicationConfigurationSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConfigurationSetting.ProtoReflect.Descriptor instead.
func (*ApplicationConfigurationSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{45}
}

func (x *ApplicationConfigurationSetting) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ApplicationConfigurationSetting) GetConfigurationDictionaryData() []byte {
	if x != nil {
		return x.ConfigurationDictionaryData
	}
	return nil
}

type ApplicationAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpnUuid string `protobuf:"bytes,1,opt,name=vpn_uuid,json=vpnUuid,proto3" json:"vpn_uuid,omitempty"`
}

func (x *ApplicationAttributes) Reset() {
	*x = ApplicationAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttributes) ProtoMessage() {}

func (x *ApplicationAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttributes.ProtoReflect.Descriptor instead.
func (*ApplicationAttributes) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{46}
}

func (x *ApplicationAttributes) GetVpnUuid() string {
	if x != nil {
		return x.VpnUuid
	}
	return ""
}

type DeviceNameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *DeviceNameSetting) Reset() {
	*x = DeviceNameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceNameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceNameSetting) ProtoMessage() {}

func (x *DeviceNameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceNameSetting.ProtoReflect.Descriptor instead.
func (*DeviceNameSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{47}
}

func (x *DeviceNameSetting) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type TimeZoneSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeZone string `protobuf:"bytes,1,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
}

func (x *TimeZoneSetting) Reset() {
	*x = TimeZoneSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeZoneSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeZoneSetting) ProtoMessage() {}

func (x *TimeZoneSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeZoneSetting.ProtoReflect.Descriptor instead.
func (*TimeZoneSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{48}
}

func (x *TimeZoneSetting) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

type SoftwareUpdateSettingsSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecommendationCadence int64 `protobuf:"varint,1,opt,name=recommendation_cadence,json=recommendationCadence,proto3" json:"recommendation_cadence,omitempty"`
}

func (x *SoftwareUpdateSettingsSetting) Reset() {
	*x = SoftwareUpdateSettingsSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftwareUpdateSettingsSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareUpdateSettingsSetting) ProtoMessage() {}

func (x *SoftwareUpdateSettingsSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareUpdateSettingsSetting.ProtoReflect.Descriptor instead.
func (*SoftwareUpdateSettingsSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{49}
}

func (x *SoftwareUpdateSettingsSetting) GetRecommendationCadence() int64 {
	if x != nil {
		return x.RecommendationCadence
	}
	return 0
}

type HostnameSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *HostnameSetting) Reset() {
	*x = HostnameSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostnameSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostnameSetting) ProtoMessage() {}

func (x *HostnameSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostnameSetting.ProtoReflect.Descriptor instead.
func (*HostnameSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{50}
}

func (x *HostnameSetting) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type MDMOptionsSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MdmOptions *MDMOptions `protobuf:"bytes,1,opt,name=mdm_options,json=mdmOptions,proto3" json:"mdm_options,omitempty"`
}

func (x *MDMOptionsSetting) Reset() {
	*x = MDMOptionsSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MDMOptionsSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDMOptionsSetting) ProtoMessage() {}

func (x *MDMOptionsSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDMOptionsSetting.ProtoReflect.Descriptor instead.
func (*MDMOptionsSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{51}
}

func (x *MDMOptionsSetting) GetMdmOptions() *MDMOptions {
	if x != nil {
		return x.MdmOptions
	}
	return nil
}

type MDMOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivationLockAllowedWhileSupervised             bool `protobuf:"varint,1,opt,name=activation_lock_allowed_while_supervised,json=activationLockAllowedWhileSupervised,proto3" json:"activation_lock_allowed_while_supervised,omitempty"`
	BootstrapTokenAllowed                            bool `protobuf:"varint,2,opt,name=bootstrap_token_allowed,json=bootstrapTokenAllowed,proto3" json:"bootstrap_token_allowed,omitempty"`
	PromptUserToAllowBootstrapTokenForAuthentication bool `protobuf:"varint,3,opt,name=prompt_user_to_allow_bootstrap_token_for_authentication,json=promptUserToAllowBootstrapTokenForAuthentication,proto3" json:"prompt_user_to_allow_bootstrap_token_for_authentication,omitempty"`
}

func (x *MDMOptions) Reset() {
	*x = MDMOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MDMOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDMOptions) ProtoMessage() {}

func (x *MDMOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDMOptions.ProtoReflect.Descriptor instead.
func (*MDMOptions) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{52}
}

func (x *MDMOptions) GetActivationLockAllowedWhileSupervised() bool {
	if x != nil {
		return x.ActivationLockAllowedWhileSupervised
	}
	return false
}

func (x *MDMOptions) GetBootstrapTokenAllowed() bool {
	if x != nil {
		return x.BootstrapTokenAllowed
	}
	return false
}

func (x *MDMOptions) GetPromptUserToAllowBootstrapTokenForAuthentication() bool {
	if x != nil {
		return x.PromptUserToAllowBootstrapTokenForAuthentication
	}
	return false
}

type PasscodeLockGracePeriodSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PasscodeLockGracePeriod int64 `protobuf:"varint,1,opt,name=passcode_lock_grace_period,json=passcodeLockGracePeriod,proto3" json:"passcode_lock_grace_period,omitempty"`
}

func (x *PasscodeLockGracePeriodSetting) Reset() {
	*x = PasscodeLockGracePeriodSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasscodeLockGracePeriodSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasscodeLockGracePeriodSetting) ProtoMessage() {}

func (x *PasscodeLockGracePeriodSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasscodeLockGracePeriodSetting.ProtoReflect.Descriptor instead.
func (*PasscodeLockGracePeriodSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{53}
}

func (x *PasscodeLockGracePeriodSetting) GetPasscodeLockGracePeriod() int64 {
	if x != nil {
		return x.PasscodeLockGracePeriod
	}
	return 0
}

type MaximumResidentUsersSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaximumResidentUsers int64 `protobuf:"varint,1,opt,name=maximum_resident_users,json=maximumResidentUsers,proto3" json:"maximum_resident_users,omitempty"`
}

func (x *MaximumResidentUsersSetting) Reset() {
	*x = MaximumResidentUsersSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaximumResidentUsersSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaximumResidentUsersSetting) ProtoMessage() {}

func (x *MaximumResidentUsersSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaximumResidentUsersSetting.ProtoReflect.Descriptor instead.
func (*MaximumResidentUsersSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{54}
}

func (x *MaximumResidentUsersSetting) GetMaximumResidentUsers() int64 {
	if x != nil {
		return x.MaximumResidentUsers
	}
	return 0
}

type DiagnosticSubmissionSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *DiagnosticSubmissionSetting) Reset() {
	*x = DiagnosticSubmissionSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosticSubmissionSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticSubmissionSetting) ProtoMessage() {}

func (x *DiagnosticSubmissionSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticSubmissionSetting.ProtoReflect.Descriptor instead.
func (*DiagnosticSubmissionSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{55}
}

func (x *DiagnosticSubmissionSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AppAnalyticsSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AppAnalyticsSetting) Reset() {
	*x = AppAnalyticsSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppAnalyticsSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppAnalyticsSetting) ProtoMessage() {}

func (x *AppAnalyticsSetting) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppAnalyticsSetting.ProtoReflect.Descriptor instead.
func (*AppAnalyticsSetting) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{56}
}

func (x *AppAnalyticsSetting) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ManagedApplicationConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *ManagedApplicationConfiguration) Reset() {
	*x = ManagedApplicationConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedApplicationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedApplicationConfiguration) ProtoMessage() {}

func (x *ManagedApplicationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedApplicationConfiguration.ProtoReflect.Descriptor instead.
func (*ManagedApplicationConfiguration) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{57}
}

func (x *ManagedApplicationConfiguration) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type ManagedApplicationAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *ManagedApplicationAttributes) Reset() {
	*x = ManagedApplicationAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedApplicationAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedApplicationAttributes) ProtoMessage() {}

func (x *ManagedApplicationAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedApplicationAttributes.ProtoReflect.Descriptor instead.
func (*ManagedApplicationAttributes) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{58}
}

func (x *ManagedApplicationAttributes) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type ManagedApplicationFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers    []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	DeleteFeedback bool     `protobuf:"varint,2,opt,name=delete_feedback,json=deleteFeedback,proto3" json:"delete_feedback,omitempty"`
}

func (x *ManagedApplicationFeedback) Reset() {
	*x = ManagedApplicationFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedApplicationFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedApplicationFeedback) ProtoMessage() {}

func (x *ManagedApplicationFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedApplicationFeedback.ProtoReflect.Descriptor instead.
func (*ManagedApplicationFeedback) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{59}
}

func (x *ManagedApplicationFeedback) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *ManagedApplicationFeedback) GetDeleteFeedback() bool {
	if x != nil {
		return x.DeleteFeedback
	}
	return false
}

type SetFirmwarePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPassword              string `protobuf:"bytes,1,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	NewPassword                  string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	AllowOroms                   bool   `protobuf:"varint,3,opt,name=allow_oroms,json=allowOroms,proto3" json:"allow_oroms,omitempty"`
	RequestRequiresNetworkTether bool   `protobuf:"varint,4,opt,name=request_requires_network_tether,json=requestRequiresNetworkTether,proto3" json:"request_requires_network_tether,omitempty"`
}

func (x *SetFirmwarePassword) Reset() {
	*x = SetFirmwarePassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFirmwarePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFirmwarePassword) ProtoMessage() {}

func (x *SetFirmwarePassword) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFirmwarePassword.ProtoReflect.Descriptor instead.
func (*SetFirmwarePassword) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{60}
}

func (x *SetFirmwarePassword) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *SetFirmwarePassword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *SetFirmwarePassword) GetAllowOroms() bool {
	if x != nil {
		return x.AllowOroms
	}
	return false
}

func (x *SetFirmwarePassword) GetRequestRequiresNetworkTether() bool {
	if x != nil {
		return x.RequestRequiresNetworkTether
	}
	return false
}

type VerifyFirmwarePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *VerifyFirmwarePassword) Reset() {
	*x = VerifyFirmwarePassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyFirmwarePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFirmwarePassword) ProtoMessage() {}

func (x *VerifyFirmwarePassword) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFirmwarePassword.ProtoReflect.Descriptor instead.
func (*VerifyFirmwarePassword) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{61}
}

func (x *VerifyFirmwarePassword) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SetRecoveryLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPassword              string `protobuf:"bytes,1,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	NewPassword                  string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	AllowOroms                   bool   `protobuf:"varint,3,opt,name=allow_oroms,json=allowOroms,proto3" json:"allow_oroms,omitempty"`
	RequestRequiresNetworkTether bool   `protobuf:"varint,4,opt,name=request_requires_network_tether,json=requestRequiresNetworkTether,proto3" json:"request_requires_network_tether,omitempty"`
}

func (x *SetRecoveryLock) Reset() {
	*x = SetRecoveryLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRecoveryLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRecoveryLock) ProtoMessage() {}

func (x *SetRecoveryLock) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRecoveryLock.ProtoReflect.Descriptor instead.
func (*SetRecoveryLock) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{62}
}

func (x *SetRecoveryLock) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *SetRecoveryLock) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *SetRecoveryLock) GetAllowOroms() bool {
	if x != nil {
		return x.AllowOroms
	}
	return false
}

func (x *SetRecoveryLock) GetRequestRequiresNetworkTether() bool {
	if x != nil {
		return x.RequestRequiresNetworkTether
	}
	return false
}

type VerifyRecoveryLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *VerifyRecoveryLock) Reset() {
	*x = VerifyRecoveryLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRecoveryLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRecoveryLock) ProtoMessage() {}

func (x *VerifyRecoveryLock) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRecoveryLock.ProtoReflect.Descriptor instead.
func (*VerifyRecoveryLock) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{63}
}

func (x *VerifyRecoveryLock) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SetAutoAdminPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid         string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	PasswordHash []byte `protobuf:"bytes,2,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
}

func (x *SetAutoAdminPassword) Reset() {
	*x = SetAutoAdminPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoAdminPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoAdminPassword) ProtoMessage() {}

func (x *SetAutoAdminPassword) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoAdminPassword.ProtoReflect.Descriptor instead.
func (*SetAutoAdminPassword) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{64}
}

func (x *SetAutoAdminPassword) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *SetAutoAdminPassword) GetPasswordHash() []byte {
	if x != nil {
		return x.PasswordHash
	}
	return nil
}

type ScheduleOSUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*Update `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *ScheduleOSUpdate) Reset() {
	*x = ScheduleOSUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOSUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOSUpdate) ProtoMessage() {}

func (x *ScheduleOSUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOSUpdate.ProtoReflect.Descriptor instead.
func (*ScheduleOSUpdate) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{65}
}

func (x *ScheduleOSUpdate) GetUpdates() []*Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductKey       string `protobuf:"bytes,1,opt,name=product_key,json=productKey,proto3" json:"product_key,omitempty"`
	ProductVersion   string `protobuf:"bytes,2,opt,name=product_version,json=productVersion,proto3" json:"product_version,omitempty"`
	InstallAction    string `protobuf:"bytes,3,opt,name=install_action,json=installAction,proto3" json:"install_action,omitempty"`
	MaxUserDeferrals int64  `protobuf:"varint,4,opt,name=max_user_deferrals,json=maxUserDeferrals,proto3" json:"max_user_deferrals,omitempty"`
	Priority         string `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{66}
}

func (x *Update) GetProductKey() string {
	if x != nil {
		return x.ProductKey
	}
	return ""
}

func (x *Update) GetProductVersion() string {
	if x != nil {
		return x.ProductVersion
	}
	return ""
}

func (x *Update) GetInstallAction() string {
	if x != nil {
		return x.InstallAction
	}
	return ""
}

func (x *Update) GetMaxUserDeferrals() int64 {
	if x != nil {
		return x.MaxUserDeferrals
	}
	return 0
}

func (x *Update) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

type ScheduleOSUpdateScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force bool `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *ScheduleOSUpdateScan) Reset() {
	*x = ScheduleOSUpdateScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOSUpdateScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOSUpdateScan) ProtoMessage() {}

func (x *ScheduleOSUpdateScan) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOSUpdateScan.ProtoReflect.Descriptor instead.
func (*ScheduleOSUpdateScan) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{67}
}

func (x *ScheduleOSUpdateScan) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ActiveNSExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterExtensionPoints []string `protobuf:"bytes,1,rep,name=filter_extension_points,json=filterExtensionPoints,proto3" json:"filter_extension_points,omitempty"`
}

func (x *ActiveNSExtensions) Reset() {
	*x = ActiveNSExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveNSExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveNSExtensions) ProtoMessage() {}

func (x *ActiveNSExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveNSExtensions.ProtoReflect.Descriptor instead.
func (*ActiveNSExtensions) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{68}
}

func (x *ActiveNSExtensions) GetFilterExtensionPoints() []string {
	if x != nil {
		return x.FilterExtensionPoints
	}
	return nil
}

type RotateFileVaultKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType                    string           `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	FilevaultUnlock            *FileVaultUnlock `protobuf:"bytes,2,opt,name=filevault_unlock,json=filevaultUnlock,proto3" json:"filevault_unlock,omitempty"`
	NewCertificate             []byte           `protobuf:"bytes,3,opt,name=new_certificate,json=newCertificate,proto3" json:"new_certificate,omitempty"`
	ReplyEncryptionCertificate []byte           `protobuf:"bytes,4,opt,name=reply_encryption_certificate,json=replyEncryptionCertificate,proto3" json:"reply_encryption_certificate,omitempty"`
}

func (x *RotateFileVaultKey) Reset() {
	*x = RotateFileVaultKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateFileVaultKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateFileVaultKey) ProtoMessage() {}

func (x *RotateFileVaultKey) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateFileVaultKey.ProtoReflect.Descriptor instead.
func (*RotateFileVaultKey) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{69}
}

func (x *RotateFileVaultKey) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *RotateFileVaultKey) GetFilevaultUnlock() *FileVaultUnlock {
	if x != nil {
		return x.FilevaultUnlock
	}
	return nil
}

func (x *RotateFileVaultKey) GetNewCertificate() []byte {
	if x != nil {
		return x.NewCertificate
	}
	return nil
}

func (x *RotateFileVaultKey) GetReplyEncryptionCertificate() []byte {
	if x != nil {
		return x.ReplyEncryptionCertificate
	}
	return nil
}

type FileVaultUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password                 string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	PrivateKeyExport         []byte `protobuf:"bytes,2,opt,name=private_key_export,json=privateKeyExport,proto3" json:"private_key_export,omitempty"`
	PrivateKeyExportPassword string `protobuf:"bytes,3,opt,name=private_key_export_password,json=privateKeyExportPassword,proto3" json:"private_key_export_password,omitempty"`
}

func (x *FileVaultUnlock) Reset() {
	*x = FileVaultUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileVaultUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileVaultUnlock) ProtoMessage() {}

func (x *FileVaultUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileVaultUnlock.ProtoReflect.Descriptor instead.
func (*FileVaultUnlock) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{70}
}

func (x *FileVaultUnlock) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FileVaultUnlock) GetPrivateKeyExport() []byte {
	if x != nil {
		return x.PrivateKeyExport
	}
	return nil
}

func (x *FileVaultUnlock) GetPrivateKeyExportPassword() string {
	if x != nil {
		return x.PrivateKeyExportPassword
	}
	return ""
}

type SetBootstrapToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootstrapToken string `protobuf:"bytes,1,opt,name=bootstrap_token,json=bootstrapToken,proto3" json:"bootstrap_token,omitempty"`
}

func (x *SetBootstrapToken) Reset() {
	*x = SetBootstrapToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBootstrapToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBootstrapToken) ProtoMessage() {}

func (x *SetBootstrapToken) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBootstrapToken.ProtoReflect.Descriptor instead.
func (*SetBootstrapToken) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{71}
}

func (x *SetBootstrapToken) GetBootstrapToken() string {
	if x != nil {
		return x.BootstrapToken
	}
	return ""
}

type ResultPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Udid        string        `protobuf:"bytes,1,opt,name=udid,proto3" json:"udid,omitempty"`
	CommandUuid string        `protobuf:"bytes,2,opt,name=command_uuid,json=commandUuid,proto3" json:"command_uuid,omitempty"`
	ErrorChain  []*ErrorChain `protobuf:"bytes,3,rep,name=error_chain,json=errorChain,proto3" json:"error_chain,omitempty"`
}

func (x *ResultPayload) Reset() {
	*x = ResultPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPayload) ProtoMessage() {}

func (x *ResultPayload) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPayload.ProtoReflect.Descriptor instead.
func (*ResultPayload) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{72}
}

func (x *ResultPayload) GetUdid() string {
	if x != nil {
		return x.Udid
	}
	return ""
}

func (x *ResultPayload) GetCommandUuid() string {
	if x != nil {
		return x.CommandUuid
	}
	return ""
}

func (x *ResultPayload) GetErrorChain() []*ErrorChain {
	if x != nil {
		return x.ErrorChain
	}
	return nil
}

type ErrorChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalizedDescription string `protobuf:"bytes,1,opt,name=localized_description,json=localizedDescription,proto3" json:"localized_description,omitempty"`
	UsEnglishDescription string `protobuf:"bytes,2,opt,name=us_english_description,json=usEnglishDescription,proto3" json:"us_english_description,omitempty"`
	// The ErrorDomain and ErrorCode keys contain internal codes used by Apple
	// that may be useful for diagnostics. Your host should not rely on these
	// values, as they may change between software releases.
	ErrorDomain string `protobuf:"bytes,3,opt,name=error_domain,json=errorDomain,proto3" json:"error_domain,omitempty"`
	ErrorCode   int32  `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *ErrorChain) Reset() {
	*x = ErrorChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorChain) ProtoMessage() {}

func (x *ErrorChain) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorChain.ProtoReflect.Descriptor instead.
func (*ErrorChain) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{73}
}

func (x *ErrorChain) GetLocalizedDescription() string {
	if x != nil {
		return x.LocalizedDescription
	}
	return ""
}

func (x *ErrorChain) GetUsEnglishDescription() string {
	if x != nil {
		return x.UsEnglishDescription
	}
	return ""
}

func (x *ErrorChain) GetErrorDomain() string {
	if x != nil {
		return x.ErrorDomain
	}
	return ""
}

func (x *ErrorChain) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type RefreshCellularPlans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsimServerUrl string `protobuf:"bytes,1,opt,name=esim_server_url,json=esimServerUrl,proto3" json:"esim_server_url,omitempty"`
}

func (x *RefreshCellularPlans) Reset() {
	*x = RefreshCellularPlans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdm_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCellularPlans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCellularPlans) ProtoMessage() {}

func (x *RefreshCellularPlans) ProtoReflect() protoreflect.Message {
	mi := &file_mdm_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCellularPlans.ProtoReflect.Descriptor instead.
func (*RefreshCellularPlans) Descriptor() ([]byte, []int) {
	return file_mdm_proto_rawDescGZIP(), []int{74}
}

func (x *RefreshCellularPlans) GetEsimServerUrl() string {
	if x != nil {
		return x.EsimServerUrl
	}
	return ""
}

var File_mdm_proto protoreflect.FileDescriptor

var file_mdm_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x64, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x64,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xf7, 0x19, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x68, 0x0a,
	0x1c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x65, 0x0a, 0x1b, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x62,
	0x0a, 0x1a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x65,
	0x72, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x72, 0x61, 0x73,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4d, 0x0a, 0x13, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x37, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4f,
	0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x64,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x55, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5c, 0x0a, 0x18, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x16, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52,
	0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x55, 0x0a, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x14, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x77, 0x0a, 0x21, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a,
	0x1e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x1c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x68, 0x0a,
	0x1c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x5c, 0x0a, 0x18,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x16, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x57, 0x0a, 0x17, 0x73, 0x65,
	0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x64,
	0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x14, 0x73,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x6f, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4f, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x57, 0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6f, 0x73, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x50, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x6e, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x53, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x73,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x12, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x6e, 0x0a, 0x1e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x13,
	0x73, 0x65, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x64, 0x6d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x50, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b,
	0x48, 0x00, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x56, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61,
	0x72, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x56,
	0x0a, 0x17, 0x6c, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x4f, 0x4d, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x6c,
	0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x2a, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x2f, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x4f,
	0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x2f, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x68, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x11, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x0d, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5b, 0x0a,
	0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x45,
	0x72, 0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x69,
	0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x69, 0x74, 0x79,
	0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64, 0x69,
	0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x61,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x41, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x0e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74,
	0x65, 0x22, 0xba, 0x03, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x75, 0x6e,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x69, 0x74, 0x75, 0x6e, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x4f, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x44,
	0x0a, 0x19, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x64, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x17, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x50, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x21, 0x70, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1e, 0x70, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x67,
	0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x64, 0x6d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x64, 0x35, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x64, 0x35, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x64, 0x35, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x64, 0x35, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b,
	0x0a, 0x11, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x7a,
	0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x0a, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x13, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x65,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x16, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x33, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x0f, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x22, 0x38, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x9f,
	0x04, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x23, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x73, 0x6b, 0x69, 0x70, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x53, 0x65, 0x74, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x29, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x53, 0x65, 0x74, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x53, 0x0a,
	0x27, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22,
	0x64, 0x6f, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a,
	0x19, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x75,
	0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x75, 0x70, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x75, 0x6e, 0x65, 0x73, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69,
	0x74, 0x75, 0x6e, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x75, 0x6e, 0x65, 0x73,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x69, 0x74, 0x75, 0x6e, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x10, 0x4c, 0x4f, 0x4d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x4f, 0x4d, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x02, 0x0a,
	0x17, 0x4c, 0x4f, 0x4d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x4e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x6f,
	0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49,
	0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49,
	0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x39,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xdc, 0x09, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x64, 0x6d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42,
	0x0a, 0x0d, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x68,
	0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x48, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x09,
	0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x6c,
	0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f,
	0x74, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x74,
	0x6f, 0x6f, 0x74, 0x68, 0x12, 0x5d, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x64, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x44, 0x4d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6d, 0x64, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x65, 0x0a, 0x1a, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x72, 0x61,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x17, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x72, 0x61,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x5b, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x14, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x66, 0x0a, 0x19, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x18, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x61, 0x0a, 0x18, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x16, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x3e, 0x0a,
	0x10, 0x57, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x22, 0x2e, 0x0a,
	0x12, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x2c, 0x0a,
	0x10, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x1c,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x16,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d,
	0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x15, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x1b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x15,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x34, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f,
	0x6e, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x56, 0x0a, 0x1d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x2d,
	0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a,
	0x11, 0x4d, 0x44, 0x4d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x64, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x44, 0x4d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x6d,
	0x64, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8f, 0x02, 0x0a, 0x0a, 0x4d, 0x44,
	0x4d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x28, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76,
	0x69, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x57, 0x68, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x65, 0x64,
	0x12, 0x36, 0x0a, 0x17, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x71, 0x0a, 0x37, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x30, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x1e, 0x50,
	0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x72, 0x61, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a,
	0x1a, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x17, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x47,
	0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x53, 0x0a, 0x1b, 0x4d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x37, 0x0a, 0x1b, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x43, 0x0a, 0x1f, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x40,
	0x0a, 0x1c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x22, 0x67, 0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x6f, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x6f, 0x6d, 0x73,
	0x12, 0x45, 0x0a, 0x1f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x54, 0x65, 0x74, 0x68, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc7, 0x01,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63,
	0x6b, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x6f, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x6f, 0x6d, 0x73,
	0x12, 0x45, 0x0a, 0x1f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x54, 0x65, 0x74, 0x68, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x22, 0x2c, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x53, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x4c,
	0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x53, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xe0, 0x01, 0x0a,
	0x12, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44,
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6e,
	0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a,
	0x1c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x1a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22,
	0x9a, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3d, 0x0a,
	0x1b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3c, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x64, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x64, 0x6d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x53, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x64, 0x6c,
	0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x4e, 0x6f, 0x77, 0x10, 0x04, 0x22,
	0xb9, 0x01, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x33,
	0x0a, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x73, 0x5f, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73,
	0x68, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x73, 0x69, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x73,
	0x69, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x42, 0x38, 0x5a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d,
	0x64, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x6d, 0x64, 0x6d, 0x2f, 0x6d, 0x64, 0x6d, 0x2f,
	0x6d, 0x64, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x64, 0x6d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mdm_proto_rawDescOnce sync.Once
	file_mdm_proto_rawDescData = file_mdm_proto_rawDesc
)

func file_mdm_proto_rawDescGZIP() []byte {
	file_mdm_proto_rawDescOnce.Do(func() {
		file_mdm_proto_rawDescData = protoimpl.X.CompressGZIP(file_mdm_proto_rawDescData)
	})
	return file_mdm_proto_rawDescData
}

var file_mdm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mdm_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_mdm_proto_goTypes = []interface{}{
	(ResultPayload_Status)(0),               // 0: mdmproto.ResultPayload.Status
	(*CommandPayload)(nil),                  // 1: mdmproto.CommandPayload
	(*Command)(nil),                         // 2: mdmproto.Command
	(*InstallProfile)(nil),                  // 3: mdmproto.InstallProfile
	(*RemoveProfile)(nil),                   // 4: mdmproto.RemoveProfile
	(*InstallProvisioningProfile)(nil),      // 5: mdmproto.InstallProvisioningProfile
	(*RemoveProvisioningProfile)(nil),       // 6: mdmproto.RemoveProvisioningProfile
	(*InstalledApplicationList)(nil),        // 7: mdmproto.InstalledApplicationList
	(*DeviceInformation)(nil),               // 8: mdmproto.DeviceInformation
	(*ClearPasscode)(nil),                   // 9: mdmproto.ClearPasscode
	(*DeviceLock)(nil),                      // 10: mdmproto.DeviceLock
	(*EraseDevice)(nil),                     // 11: mdmproto.EraseDevice
	(*RequestMirroring)(nil),                // 12: mdmproto.RequestMirroring
	(*Restrictions)(nil),                    // 13: mdmproto.Restrictions
	(*UnlockUserAccount)(nil),               // 14: mdmproto.UnlockUserAccount
	(*DeleteUser)(nil),                      // 15: mdmproto.DeleteUser
	(*EnableLostMode)(nil),                  // 16: mdmproto.EnableLostMode
	(*InstallApplication)(nil),              // 17: mdmproto.InstallApplication
	(*InstallApplicationOptions)(nil),       // 18: mdmproto.InstallApplicationOptions
	(*InstallApplicationConfiguration)(nil), // 19: mdmproto.InstallApplicationConfiguration
	(*InstallApplicationAttributes)(nil),    // 20: mdmproto.InstallApplicationAttributes
	(*InstallEnterpriseApplication)(nil),    // 21: mdmproto.InstallEnterpriseApplication
	(*Manifest)(nil),                        // 22: mdmproto.Manifest
	(*ManifestItem)(nil),                    // 23: mdmproto.ManifestItem
	(*Asset)(nil),                           // 24: mdmproto.Asset
	(*Metadata)(nil),                        // 25: mdmproto.Metadata
	(*BundleInfo)(nil),                      // 26: mdmproto.BundleInfo
	(*ApplyRedemptionCode)(nil),             // 27: mdmproto.ApplyRedemptionCode
	(*ManagedApplicationList)(nil),          // 28: mdmproto.ManagedApplicationList
	(*RemoveApplication)(nil),               // 29: mdmproto.RemoveApplication
	(*InviteToProgram)(nil),                 // 30: mdmproto.InviteToProgram
	(*ValidateApplications)(nil),            // 31: mdmproto.ValidateApplications
	(*AccountConfiguration)(nil),            // 32: mdmproto.AccountConfiguration
	(*AutoSetupAdminAccounts)(nil),          // 33: mdmproto.AutoSetupAdminAccounts
	(*InstallMedia)(nil),                    // 34: mdmproto.InstallMedia
	(*RemoveMedia)(nil),                     // 35: mdmproto.RemoveMedia
	(*LOMDeviceRequest)(nil),                // 36: mdmproto.LOMDeviceRequest
	(*LOMDeviceRequestCommand)(nil),         // 37: mdmproto.LOMDeviceRequestCommand
	(*Settings)(nil),                        // 38: mdmproto.Settings
	(*Setting)(nil),                         // 39: mdmproto.Setting
	(*VoiceRoamingSetting)(nil),             // 40: mdmproto.VoiceRoamingSetting
	(*PersonalHotspotSetting)(nil),          // 41: mdmproto.PersonalHotspotSetting
	(*WallpaperSetting)(nil),                // 42: mdmproto.WallpaperSetting
	(*DataRoamingSetting)(nil),              // 43: mdmproto.DataRoamingSetting
	(*BluetoothSetting)(nil),                // 44: mdmproto.BluetoothSetting
	(*ApplicationAttributesSetting)(nil),    // 45: mdmproto.ApplicationAttributesSetting
	(*ApplicationConfigurationSetting)(nil), // 46: mdmproto.ApplicationConfigurationSetting
	(*ApplicationAttributes)(nil),           // 47: mdmproto.ApplicationAttributes
	(*DeviceNameSetting)(nil),               // 48: mdmproto.DeviceNameSetting
	(*TimeZoneSetting)(nil),                 // 49: mdmproto.TimeZoneSetting
	(*SoftwareUpdateSettingsSetting)(nil),   // 50: mdmproto.SoftwareUpdateSettingsSetting
	(*HostnameSetting)(nil),                 // 51: mdmproto.HostnameSetting
	(*MDMOptionsSetting)(nil),               // 52: mdmproto.MDMOptionsSetting
	(*MDMOptions)(nil),                      // 53: mdmproto.MDMOptions
	(*PasscodeLockGracePeriodSetting)(nil),  // 54: mdmproto.PasscodeLockGracePeriodSetting
	(*MaximumResidentUsersSetting)(nil),     // 55: mdmproto.MaximumResidentUsersSetting
	(*DiagnosticSubmissionSetting)(nil),     // 56: mdmproto.DiagnosticSubmissionSetting
	(*AppAnalyticsSetting)(nil),             // 57: mdmproto.AppAnalyticsSetting
	(*ManagedApplicationConfiguration)(nil), // 58: mdmproto.ManagedApplicationConfiguration
	(*ManagedApplicationAttributes)(nil),    // 59: mdmproto.ManagedApplicationAttributes
	(*ManagedApplicationFeedback)(nil),      // 60: mdmproto.ManagedApplicationFeedback
	(*SetFirmwarePassword)(nil),             // 61: mdmproto.SetFirmwarePassword
	(*VerifyFirmwarePassword)(nil),          // 62: mdmproto.VerifyFirmwarePassword
	(*SetRecoveryLock)(nil),                 // 63: mdmproto.SetRecoveryLock
	(*VerifyRecoveryLock)(nil),              // 64: mdmproto.VerifyRecoveryLock
	(*SetAutoAdminPassword)(nil),            // 65: mdmproto.SetAutoAdminPassword
	(*ScheduleOSUpdate)(nil),                // 66: mdmproto.ScheduleOSUpdate
	(*Update)(nil),                          // 67: mdmproto.Update
	(*ScheduleOSUpdateScan)(nil),            // 68: mdmproto.ScheduleOSUpdateScan
	(*ActiveNSExtensions)(nil),              // 69: mdmproto.ActiveNSExtensions
	(*RotateFileVaultKey)(nil),              // 70: mdmproto.RotateFileVaultKey
	(*FileVaultUnlock)(nil),                 // 71: mdmproto.FileVaultUnlock
	(*SetBootstrapToken)(nil),               // 72: mdmproto.SetBootstrapToken
	(*ResultPayload)(nil),                   // 73: mdmproto.ResultPayload
	(*ErrorChain)(nil),                      // 74: mdmproto.ErrorChain
	(*RefreshCellularPlans)(nil),            // 75: mdmproto.RefreshCellularPlans
}
var file_mdm_proto_depIdxs = []int32{
	2,  // 0: mdmproto.CommandPayload.command:type_name -> mdmproto.Command
	3,  // 1: mdmproto.Command.install_profile:type_name -> mdmproto.InstallProfile
	4,  // 2: mdmproto.Command.remove_profile:type_name -> mdmproto.RemoveProfile
	5,  // 3: mdmproto.Command.install_provisioning_profile:type_name -> mdmproto.InstallProvisioningProfile
	6,  // 4: mdmproto.Command.remove_profisioning_profile:type_name -> mdmproto.RemoveProvisioningProfile
	7,  // 5: mdmproto.Command.installed_application_list:type_name -> mdmproto.InstalledApplicationList
	8,  // 6: mdmproto.Command.device_information:type_name -> mdmproto.DeviceInformation
	10, // 7: mdmproto.Command.device_lock:type_name -> mdmproto.DeviceLock
	9,  // 8: mdmproto.Command.clear_passcode:type_name -> mdmproto.ClearPasscode
	11, // 9: mdmproto.Command.erase_device:type_name -> mdmproto.EraseDevice
	12, // 10: mdmproto.Command.request_mirroring:type_name -> mdmproto.RequestMirroring
	13, // 11: mdmproto.Command.restrictions:type_name -> mdmproto.Restrictions
	14, // 12: mdmproto.Command.unlock_user_account:type_name -> mdmproto.UnlockUserAccount
	15, // 13: mdmproto.Command.delete_user:type_name -> mdmproto.DeleteUser
	16, // 14: mdmproto.Command.enable_lost_mode:type_name -> mdmproto.EnableLostMode
	17, // 15: mdmproto.Command.install_application:type_name -> mdmproto.InstallApplication
	32, // 16: mdmproto.Command.account_configuration:type_name -> mdmproto.AccountConfiguration
	27, // 17: mdmproto.Command.apply_redemption_code:type_name -> mdmproto.ApplyRedemptionCode
	28, // 18: mdmproto.Command.managed_application_list:type_name -> mdmproto.ManagedApplicationList
	29, // 19: mdmproto.Command.remove_application:type_name -> mdmproto.RemoveApplication
	30, // 20: mdmproto.Command.invite_to_program:type_name -> mdmproto.InviteToProgram
	31, // 21: mdmproto.Command.validata_applications:type_name -> mdmproto.ValidateApplications
	34, // 22: mdmproto.Command.install_media:type_name -> mdmproto.InstallMedia
	35, // 23: mdmproto.Command.remove_media:type_name -> mdmproto.RemoveMedia
	38, // 24: mdmproto.Command.settings:type_name -> mdmproto.Settings
	58, // 25: mdmproto.Command.managed_application_configuration:type_name -> mdmproto.ManagedApplicationConfiguration
	59, // 26: mdmproto.Command.managed_application_attributes:type_name -> mdmproto.ManagedApplicationAttributes
	60, // 27: mdmproto.Command.managed_application_feedback:type_name -> mdmproto.ManagedApplicationFeedback
	61, // 28: mdmproto.Command.set_firmware_password:type_name -> mdmproto.SetFirmwarePassword
	62, // 29: mdmproto.Command.verify_firmware_password:type_name -> mdmproto.VerifyFirmwarePassword
	65, // 30: mdmproto.Command.set_auto_admin_password:type_name -> mdmproto.SetAutoAdminPassword
	66, // 31: mdmproto.Command.schedule_os_update:type_name -> mdmproto.ScheduleOSUpdate
	68, // 32: mdmproto.Command.schedule_os_update_scan:type_name -> mdmproto.ScheduleOSUpdateScan
	69, // 33: mdmproto.Command.active_ns_extensions:type_name -> mdmproto.ActiveNSExtensions
	70, // 34: mdmproto.Command.rotate_filevault_key:type_name -> mdmproto.RotateFileVaultKey
	21, // 35: mdmproto.Command.install_enterprise_application:type_name -> mdmproto.InstallEnterpriseApplication
	72, // 36: mdmproto.Command.set_bootstrap_token:type_name -> mdmproto.SetBootstrapToken
	63, // 37: mdmproto.Command.set_recovery_lock:type_name -> mdmproto.SetRecoveryLock
	64, // 38: mdmproto.Command.verify_recovery_lock:type_name -> mdmproto.VerifyRecoveryLock
	75, // 39: mdmproto.Command.refresh_cellular_plans:type_name -> mdmproto.RefreshCellularPlans
	36, // 40: mdmproto.Command.lomDeviceRequestCommand:type_name -> mdmproto.LOMDeviceRequest
	18, // 41: mdmproto.InstallApplication.options:type_name -> mdmproto.InstallApplicationOptions
	19, // 42: mdmproto.InstallApplication.configuration:type_name -> mdmproto.InstallApplicationConfiguration
	20, // 43: mdmproto.InstallApplication.attributes:type_name -> mdmproto.InstallApplicationAttributes
	22, // 44: mdmproto.InstallEnterpriseApplication.manifest:type_name -> mdmproto.Manifest
	23, // 45: mdmproto.Manifest.manifest_items:type_name -> mdmproto.ManifestItem
	24, // 46: mdmproto.ManifestItem.assets:type_name -> mdmproto.Asset
	25, // 47: mdmproto.ManifestItem.metadata:type_name -> mdmproto.Metadata
	26, // 48: mdmproto.Metadata.items:type_name -> mdmproto.BundleInfo
	33, // 49: mdmproto.AccountConfiguration.auto_setup_admin_accounts:type_name -> mdmproto.AutoSetupAdminAccounts
	37, // 50: mdmproto.LOMDeviceRequest.requestList:type_name -> mdmproto.LOMDeviceRequestCommand
	39, // 51: mdmproto.Settings.settings:type_name -> mdmproto.Setting
	48, // 52: mdmproto.Setting.device_name:type_name -> mdmproto.DeviceNameSetting
	51, // 53: mdmproto.Setting.hostname:type_name -> mdmproto.HostnameSetting
	40, // 54: mdmproto.Setting.voice_roaming:type_name -> mdmproto.VoiceRoamingSetting
	41, // 55: mdmproto.Setting.personal_hotspot:type_name -> mdmproto.PersonalHotspotSetting
	42, // 56: mdmproto.Setting.wallpaper:type_name -> mdmproto.WallpaperSetting
	43, // 57: mdmproto.Setting.data_roaming:type_name -> mdmproto.DataRoamingSetting
	44, // 58: mdmproto.Setting.bluetooth:type_name -> mdmproto.BluetoothSetting
	45, // 59: mdmproto.Setting.application_attributes:type_name -> mdmproto.ApplicationAttributesSetting
	52, // 60: mdmproto.Setting.mdm_options:type_name -> mdmproto.MDMOptionsSetting
	54, // 61: mdmproto.Setting.passcode_lock_grace_period:type_name -> mdmproto.PasscodeLockGracePeriodSetting
	55, // 62: mdmproto.Setting.maximum_resident_users:type_name -> mdmproto.MaximumResidentUsersSetting
	56, // 63: mdmproto.Setting.diagnostic_submission:type_name -> mdmproto.DiagnosticSubmissionSetting
	57, // 64: mdmproto.Setting.app_analytics:type_name -> mdmproto.AppAnalyticsSetting
	46, // 65: mdmproto.Setting.application_configuration:type_name -> mdmproto.ApplicationConfigurationSetting
	49, // 66: mdmproto.Setting.time_zone:type_name -> mdmproto.TimeZoneSetting
	50, // 67: mdmproto.Setting.software_update_settings:type_name -> mdmproto.SoftwareUpdateSettingsSetting
	47, // 68: mdmproto.ApplicationAttributesSetting.application_attributes:type_name -> mdmproto.ApplicationAttributes
	53, // 69: mdmproto.MDMOptionsSetting.mdm_options:type_name -> mdmproto.MDMOptions
	67, // 70: mdmproto.ScheduleOSUpdate.updates:type_name -> mdmproto.Update
	71, // 71: mdmproto.RotateFileVaultKey.filevault_unlock:type_name -> mdmproto.FileVaultUnlock
	74, // 72: mdmproto.ResultPayload.error_chain:type_name -> mdmproto.ErrorChain
	73, // [73:73] is the sub-list for method output_type
	73, // [73:73] is the sub-list for method input_type
	73, // [73:73] is the sub-list for extension type_name
	73, // [73:73] is the sub-list for extension extendee
	0,  // [0:73] is the sub-list for field type_name
}

func init() { file_mdm_proto_init() }
func file_mdm_proto_init() {
	if File_mdm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mdm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallProvisioningProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProvisioningProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstalledApplicationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearPasscode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EraseDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMirroring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restrictions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUserAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableLostMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallApplicationOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallApplicationConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallApplicationAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallEnterpriseApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRedemptionCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedApplicationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteToProgram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateApplications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoSetupAdminAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LOMDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LOMDeviceRequestCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceRoamingSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalHotspotSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WallpaperSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRoamingSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BluetoothSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttributesSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationConfigurationSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceNameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeZoneSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftwareUpdateSettingsSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostnameSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MDMOptionsSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MDMOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasscodeLockGracePeriodSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaximumResidentUsersSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosticSubmissionSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppAnalyticsSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedApplicationConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedApplicationAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedApplicationFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFirmwarePassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyFirmwarePassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRecoveryLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRecoveryLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoAdminPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOSUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOSUpdateScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveNSExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotateFileVaultKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileVaultUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBootstrapToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdm_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCellularPlans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mdm_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Command_InstallProfile)(nil),
		(*Command_RemoveProfile)(nil),
		(*Command_InstallProvisioningProfile)(nil),
		(*Command_RemoveProfisioningProfile)(nil),
		(*Command_InstalledApplicationList)(nil),
		(*Command_DeviceInformation)(nil),
		(*Command_DeviceLock)(nil),
		(*Command_ClearPasscode)(nil),
		(*Command_EraseDevice)(nil),
		(*Command_RequestMirroring)(nil),
		(*Command_Restrictions)(nil),
		(*Command_UnlockUserAccount)(nil),
		(*Command_DeleteUser)(nil),
		(*Command_EnableLostMode)(nil),
		(*Command_InstallApplication)(nil),
		(*Command_AccountConfiguration)(nil),
		(*Command_ApplyRedemptionCode)(nil),
		(*Command_ManagedApplicationList)(nil),
		(*Command_RemoveApplication)(nil),
		(*Command_InviteToProgram)(nil),
		(*Command_ValidataApplications)(nil),
		(*Command_InstallMedia)(nil),
		(*Command_RemoveMedia)(nil),
		(*Command_Settings)(nil),
		(*Command_ManagedApplicationConfiguration)(nil),
		(*Command_ManagedApplicationAttributes)(nil),
		(*Command_ManagedApplicationFeedback)(nil),
		(*Command_SetFirmwarePassword)(nil),
		(*Command_VerifyFirmwarePassword)(nil),
		(*Command_SetAutoAdminPassword)(nil),
		(*Command_ScheduleOsUpdate)(nil),
		(*Command_ScheduleOsUpdateScan)(nil),
		(*Command_ActiveNsExtensions)(nil),
		(*Command_RotateFilevaultKey)(nil),
		(*Command_InstallEnterpriseApplication)(nil),
		(*Command_SetBootstrapToken)(nil),
		(*Command_SetRecoveryLock)(nil),
		(*Command_VerifyRecoveryLock)(nil),
		(*Command_RefreshCellularPlans)(nil),
		(*Command_LomDeviceRequestCommand)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mdm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mdm_proto_goTypes,
		DependencyIndexes: file_mdm_proto_depIdxs,
		EnumInfos:         file_mdm_proto_enumTypes,
		MessageInfos:      file_mdm_proto_msgTypes,
	}.Build()
	File_mdm_proto = out.File
	file_mdm_proto_rawDesc = nil
	file_mdm_proto_goTypes = nil
	file_mdm_proto_depIdxs = nil
}
